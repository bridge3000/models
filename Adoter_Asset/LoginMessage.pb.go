// Code generated by protoc-gen-go. DO NOT EDIT.
// source: LoginMessage.proto

package Adoter_Asset

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EStateCode int32

const (
	// TODO：编码统一分段
	EStateCode_CODE_DEFAULT                     EStateCode = 0
	EStateCode_CODE_SUCCESS                     EStateCode = 200
	EStateCode_CODE_GAME_NONE                   EStateCode = 100
	EStateCode_CODE_CHANNEL_NONE                EStateCode = 101
	EStateCode_CODE_MASTER_NONE                 EStateCode = 102
	EStateCode_CODE_SDK_AUTH_FAILED             EStateCode = 103
	EStateCode_CODE_AUTH_FAILED                 EStateCode = 104
	EStateCode_CODE_USER_NONE                   EStateCode = 105
	EStateCode_CODE_VERIFY_FAILED               EStateCode = 106
	EStateCode_CODE_TOKEN_ERROR                 EStateCode = 107
	EStateCode_CODE_MONEY_ERROR                 EStateCode = 108
	EStateCode_CODE_ORDER_ERROR                 EStateCode = 109
	EStateCode_CODE_SIGN_ERROR                  EStateCode = 110
	EStateCode_CODE_PAY_CLOSED                  EStateCode = 111
	EStateCode_CODE_CHANNEL_NOT_MATCH           EStateCode = 112
	EStateCode_CODE_DEVICE_ID_NONE              EStateCode = 113
	EStateCode_CODE_SDK_SCRIPT_NONE             EStateCode = 114
	EStateCode_CODE_INVALID_PASSWORD            EStateCode = 115
	EStateCode_CODE_PARAM_MISS                  EStateCode = 116
	EStateCode_CODE_ERR_CP_CONN                 EStateCode = 117
	EStateCode_CODE_ERR_CP_REQUEST              EStateCode = 118
	EStateCode_CODE_ERR_CP_AUTH                 EStateCode = 119
	EStateCode_CODE_VERIFY_CODE_NOT_MATCH       EStateCode = 120
	EStateCode_CODE_ERR_ACTIVE_CODE             EStateCode = 121
	EStateCode_CODE_ACTIVE_CODE_USED            EStateCode = 122
	EStateCode_CODE_ERR_EXT_FORMAT              EStateCode = 123
	EStateCode_CODE_ERR_SEND_SMS                EStateCode = 124
	EStateCode_CODE_PHONE_ACTIVED               EStateCode = 125
	EStateCode_CODE_SERVICE_BUSY                EStateCode = 126
	EStateCode_CODE_ACCOUNT_BANED               EStateCode = 127
	EStateCode_CODE_TOKEN_EXPIRED               EStateCode = 128
	EStateCode_CODE_MOBILE_ERROR                EStateCode = 129
	EStateCode_CODE_NEED_SMS_VERIFY             EStateCode = 130
	EStateCode_CODE_SMS_SEND_TOO_FAST           EStateCode = 131
	EStateCode_CODE_SDK_USER_OVER_LIMIT         EStateCode = 132
	EStateCode_CODE_USDK_USER_MISMATCH          EStateCode = 133
	EStateCode_CODE_CUID_TOO_LONG               EStateCode = 134
	EStateCode_CODE_CREATE_VISTOR_ACCOUNT_ERROR EStateCode = 135
	EStateCode_CODE_EMAIL_ISEXITS               EStateCode = 136
	EStateCode_CODE_EMAIL_FORMAT_ERROR          EStateCode = 137
	EStateCode_CODE_AUTH_CODE_ERROR             EStateCode = 138
	EStateCode_CODE_AUTH_CODE_OVERDUE           EStateCode = 139
)

var EStateCode_name = map[int32]string{
	0:   "CODE_DEFAULT",
	200: "CODE_SUCCESS",
	100: "CODE_GAME_NONE",
	101: "CODE_CHANNEL_NONE",
	102: "CODE_MASTER_NONE",
	103: "CODE_SDK_AUTH_FAILED",
	104: "CODE_AUTH_FAILED",
	105: "CODE_USER_NONE",
	106: "CODE_VERIFY_FAILED",
	107: "CODE_TOKEN_ERROR",
	108: "CODE_MONEY_ERROR",
	109: "CODE_ORDER_ERROR",
	110: "CODE_SIGN_ERROR",
	111: "CODE_PAY_CLOSED",
	112: "CODE_CHANNEL_NOT_MATCH",
	113: "CODE_DEVICE_ID_NONE",
	114: "CODE_SDK_SCRIPT_NONE",
	115: "CODE_INVALID_PASSWORD",
	116: "CODE_PARAM_MISS",
	117: "CODE_ERR_CP_CONN",
	118: "CODE_ERR_CP_REQUEST",
	119: "CODE_ERR_CP_AUTH",
	120: "CODE_VERIFY_CODE_NOT_MATCH",
	121: "CODE_ERR_ACTIVE_CODE",
	122: "CODE_ACTIVE_CODE_USED",
	123: "CODE_ERR_EXT_FORMAT",
	124: "CODE_ERR_SEND_SMS",
	125: "CODE_PHONE_ACTIVED",
	126: "CODE_SERVICE_BUSY",
	127: "CODE_ACCOUNT_BANED",
	128: "CODE_TOKEN_EXPIRED",
	129: "CODE_MOBILE_ERROR",
	130: "CODE_NEED_SMS_VERIFY",
	131: "CODE_SMS_SEND_TOO_FAST",
	132: "CODE_SDK_USER_OVER_LIMIT",
	133: "CODE_USDK_USER_MISMATCH",
	134: "CODE_CUID_TOO_LONG",
	135: "CODE_CREATE_VISTOR_ACCOUNT_ERROR",
	136: "CODE_EMAIL_ISEXITS",
	137: "CODE_EMAIL_FORMAT_ERROR",
	138: "CODE_AUTH_CODE_ERROR",
	139: "CODE_AUTH_CODE_OVERDUE",
}

var EStateCode_value = map[string]int32{
	"CODE_DEFAULT":                     0,
	"CODE_SUCCESS":                     200,
	"CODE_GAME_NONE":                   100,
	"CODE_CHANNEL_NONE":                101,
	"CODE_MASTER_NONE":                 102,
	"CODE_SDK_AUTH_FAILED":             103,
	"CODE_AUTH_FAILED":                 104,
	"CODE_USER_NONE":                   105,
	"CODE_VERIFY_FAILED":               106,
	"CODE_TOKEN_ERROR":                 107,
	"CODE_MONEY_ERROR":                 108,
	"CODE_ORDER_ERROR":                 109,
	"CODE_SIGN_ERROR":                  110,
	"CODE_PAY_CLOSED":                  111,
	"CODE_CHANNEL_NOT_MATCH":           112,
	"CODE_DEVICE_ID_NONE":              113,
	"CODE_SDK_SCRIPT_NONE":             114,
	"CODE_INVALID_PASSWORD":            115,
	"CODE_PARAM_MISS":                  116,
	"CODE_ERR_CP_CONN":                 117,
	"CODE_ERR_CP_REQUEST":              118,
	"CODE_ERR_CP_AUTH":                 119,
	"CODE_VERIFY_CODE_NOT_MATCH":       120,
	"CODE_ERR_ACTIVE_CODE":             121,
	"CODE_ACTIVE_CODE_USED":            122,
	"CODE_ERR_EXT_FORMAT":              123,
	"CODE_ERR_SEND_SMS":                124,
	"CODE_PHONE_ACTIVED":               125,
	"CODE_SERVICE_BUSY":                126,
	"CODE_ACCOUNT_BANED":               127,
	"CODE_TOKEN_EXPIRED":               128,
	"CODE_MOBILE_ERROR":                129,
	"CODE_NEED_SMS_VERIFY":             130,
	"CODE_SMS_SEND_TOO_FAST":           131,
	"CODE_SDK_USER_OVER_LIMIT":         132,
	"CODE_USDK_USER_MISMATCH":          133,
	"CODE_CUID_TOO_LONG":               134,
	"CODE_CREATE_VISTOR_ACCOUNT_ERROR": 135,
	"CODE_EMAIL_ISEXITS":               136,
	"CODE_EMAIL_FORMAT_ERROR":          137,
	"CODE_AUTH_CODE_ERROR":             138,
	"CODE_AUTH_CODE_OVERDUE":           139,
}

func (x EStateCode) String() string {
	return proto.EnumName(EStateCode_name, int32(x))
}

func (EStateCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5125ba1ef2803df2, []int{0}
}

type PBSDKServerLoginRequest struct {
	GameId               string   `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	ChannelId            string   `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Extension            string   `protobuf:"bytes,3,opt,name=extension,proto3" json:"extension,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PBSDKServerLoginRequest) Reset()         { *m = PBSDKServerLoginRequest{} }
func (m *PBSDKServerLoginRequest) String() string { return proto.CompactTextString(m) }
func (*PBSDKServerLoginRequest) ProtoMessage()    {}
func (*PBSDKServerLoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5125ba1ef2803df2, []int{0}
}

func (m *PBSDKServerLoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBSDKServerLoginRequest.Unmarshal(m, b)
}
func (m *PBSDKServerLoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBSDKServerLoginRequest.Marshal(b, m, deterministic)
}
func (m *PBSDKServerLoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBSDKServerLoginRequest.Merge(m, src)
}
func (m *PBSDKServerLoginRequest) XXX_Size() int {
	return xxx_messageInfo_PBSDKServerLoginRequest.Size(m)
}
func (m *PBSDKServerLoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PBSDKServerLoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PBSDKServerLoginRequest proto.InternalMessageInfo

func (m *PBSDKServerLoginRequest) GetGameId() string {
	if m != nil {
		return m.GameId
	}
	return ""
}

func (m *PBSDKServerLoginRequest) GetChannelId() string {
	if m != nil {
		return m.ChannelId
	}
	return ""
}

func (m *PBSDKServerLoginRequest) GetExtension() string {
	if m != nil {
		return m.Extension
	}
	return ""
}

type PBSDKServerLoginResponse struct {
	Code                 int32             `protobuf:"zigzag32,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 *PBTokenedAccount `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	SrvAddr              string            `protobuf:"bytes,4,opt,name=srvAddr,proto3" json:"srvAddr,omitempty"`
	PbData               string            `protobuf:"bytes,5,opt,name=pbData,proto3" json:"pbData,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PBSDKServerLoginResponse) Reset()         { *m = PBSDKServerLoginResponse{} }
func (m *PBSDKServerLoginResponse) String() string { return proto.CompactTextString(m) }
func (*PBSDKServerLoginResponse) ProtoMessage()    {}
func (*PBSDKServerLoginResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5125ba1ef2803df2, []int{1}
}

func (m *PBSDKServerLoginResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBSDKServerLoginResponse.Unmarshal(m, b)
}
func (m *PBSDKServerLoginResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBSDKServerLoginResponse.Marshal(b, m, deterministic)
}
func (m *PBSDKServerLoginResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBSDKServerLoginResponse.Merge(m, src)
}
func (m *PBSDKServerLoginResponse) XXX_Size() int {
	return xxx_messageInfo_PBSDKServerLoginResponse.Size(m)
}
func (m *PBSDKServerLoginResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PBSDKServerLoginResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PBSDKServerLoginResponse proto.InternalMessageInfo

func (m *PBSDKServerLoginResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *PBSDKServerLoginResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *PBSDKServerLoginResponse) GetData() *PBTokenedAccount {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *PBSDKServerLoginResponse) GetSrvAddr() string {
	if m != nil {
		return m.SrvAddr
	}
	return ""
}

func (m *PBSDKServerLoginResponse) GetPbData() string {
	if m != nil {
		return m.PbData
	}
	return ""
}

type PBTokenedAccount struct {
	UserId               uint32           `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	UserName             string           `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
	SdkUserId            string           `protobuf:"bytes,3,opt,name=sdkUserId,proto3" json:"sdkUserId,omitempty"`
	SdkUserName          string           `protobuf:"bytes,4,opt,name=sdkUserName,proto3" json:"sdkUserName,omitempty"`
	Token                string           `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`
	Extension            *PBUserExtension `protobuf:"bytes,6,opt,name=extension,proto3" json:"extension,omitempty"`
	ChannelId            uint32           `protobuf:"varint,8,opt,name=channelId,proto3" json:"channelId,omitempty"`
	Timestamp            int64            `protobuf:"varint,9,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	DeviceToken          string           `protobuf:"bytes,10,opt,name=deviceToken,proto3" json:"deviceToken,omitempty"`
	IsWhite              uint32           `protobuf:"varint,11,opt,name=isWhite,proto3" json:"isWhite,omitempty"`
	BanReason            string           `protobuf:"bytes,12,opt,name=ban_reason,json=banReason,proto3" json:"ban_reason,omitempty"`
	LockTime             int64            `protobuf:"varint,13,opt,name=lock_time,json=lockTime,proto3" json:"lock_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PBTokenedAccount) Reset()         { *m = PBTokenedAccount{} }
func (m *PBTokenedAccount) String() string { return proto.CompactTextString(m) }
func (*PBTokenedAccount) ProtoMessage()    {}
func (*PBTokenedAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_5125ba1ef2803df2, []int{2}
}

func (m *PBTokenedAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBTokenedAccount.Unmarshal(m, b)
}
func (m *PBTokenedAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBTokenedAccount.Marshal(b, m, deterministic)
}
func (m *PBTokenedAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBTokenedAccount.Merge(m, src)
}
func (m *PBTokenedAccount) XXX_Size() int {
	return xxx_messageInfo_PBTokenedAccount.Size(m)
}
func (m *PBTokenedAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_PBTokenedAccount.DiscardUnknown(m)
}

var xxx_messageInfo_PBTokenedAccount proto.InternalMessageInfo

func (m *PBTokenedAccount) GetUserId() uint32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *PBTokenedAccount) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *PBTokenedAccount) GetSdkUserId() string {
	if m != nil {
		return m.SdkUserId
	}
	return ""
}

func (m *PBTokenedAccount) GetSdkUserName() string {
	if m != nil {
		return m.SdkUserName
	}
	return ""
}

func (m *PBTokenedAccount) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *PBTokenedAccount) GetExtension() *PBUserExtension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (m *PBTokenedAccount) GetChannelId() uint32 {
	if m != nil {
		return m.ChannelId
	}
	return 0
}

func (m *PBTokenedAccount) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *PBTokenedAccount) GetDeviceToken() string {
	if m != nil {
		return m.DeviceToken
	}
	return ""
}

func (m *PBTokenedAccount) GetIsWhite() uint32 {
	if m != nil {
		return m.IsWhite
	}
	return 0
}

func (m *PBTokenedAccount) GetBanReason() string {
	if m != nil {
		return m.BanReason
	}
	return ""
}

func (m *PBTokenedAccount) GetLockTime() int64 {
	if m != nil {
		return m.LockTime
	}
	return 0
}

// Extension for SDK server
// 用户信息扩展
type PBUserExtension struct {
	Data                 string            `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	StrMap               map[string]string `protobuf:"bytes,2,rep,name=str_map,json=strMap,proto3" json:"str_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	IntMap               map[string]int32  `protobuf:"bytes,3,rep,name=int_map,json=intMap,proto3" json:"int_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PBUserExtension) Reset()         { *m = PBUserExtension{} }
func (m *PBUserExtension) String() string { return proto.CompactTextString(m) }
func (*PBUserExtension) ProtoMessage()    {}
func (*PBUserExtension) Descriptor() ([]byte, []int) {
	return fileDescriptor_5125ba1ef2803df2, []int{3}
}

func (m *PBUserExtension) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBUserExtension.Unmarshal(m, b)
}
func (m *PBUserExtension) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBUserExtension.Marshal(b, m, deterministic)
}
func (m *PBUserExtension) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBUserExtension.Merge(m, src)
}
func (m *PBUserExtension) XXX_Size() int {
	return xxx_messageInfo_PBUserExtension.Size(m)
}
func (m *PBUserExtension) XXX_DiscardUnknown() {
	xxx_messageInfo_PBUserExtension.DiscardUnknown(m)
}

var xxx_messageInfo_PBUserExtension proto.InternalMessageInfo

func (m *PBUserExtension) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *PBUserExtension) GetStrMap() map[string]string {
	if m != nil {
		return m.StrMap
	}
	return nil
}

func (m *PBUserExtension) GetIntMap() map[string]int32 {
	if m != nil {
		return m.IntMap
	}
	return nil
}

type PBChannelList struct {
	Channels             []*PBChannel `protobuf:"bytes,1,rep,name=channels,proto3" json:"channels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PBChannelList) Reset()         { *m = PBChannelList{} }
func (m *PBChannelList) String() string { return proto.CompactTextString(m) }
func (*PBChannelList) ProtoMessage()    {}
func (*PBChannelList) Descriptor() ([]byte, []int) {
	return fileDescriptor_5125ba1ef2803df2, []int{4}
}

func (m *PBChannelList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBChannelList.Unmarshal(m, b)
}
func (m *PBChannelList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBChannelList.Marshal(b, m, deterministic)
}
func (m *PBChannelList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBChannelList.Merge(m, src)
}
func (m *PBChannelList) XXX_Size() int {
	return xxx_messageInfo_PBChannelList.Size(m)
}
func (m *PBChannelList) XXX_DiscardUnknown() {
	xxx_messageInfo_PBChannelList.DiscardUnknown(m)
}

var xxx_messageInfo_PBChannelList proto.InternalMessageInfo

func (m *PBChannelList) GetChannels() []*PBChannel {
	if m != nil {
		return m.Channels
	}
	return nil
}

// 渠道信息
type PBChannel struct {
	ChannelId            uint32   `protobuf:"varint,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	AppId                uint32   `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	CpAppId              string   `protobuf:"bytes,3,opt,name=cp_app_id,json=cpAppId,proto3" json:"cp_app_id,omitempty"`
	CpAppKey             string   `protobuf:"bytes,4,opt,name=cp_app_key,json=cpAppKey,proto3" json:"cp_app_key,omitempty"`
	CpAppSecret          string   `protobuf:"bytes,5,opt,name=cp_app_secret,json=cpAppSecret,proto3" json:"cp_app_secret,omitempty"`
	CpId                 string   `protobuf:"bytes,6,opt,name=cp_id,json=cpId,proto3" json:"cp_id,omitempty"`
	CpPayId              string   `protobuf:"bytes,7,opt,name=cp_pay_id,json=cpPayId,proto3" json:"cp_pay_id,omitempty"`
	CpPayKey             string   `protobuf:"bytes,8,opt,name=cp_pay_key,json=cpPayKey,proto3" json:"cp_pay_key,omitempty"`
	CpPayPriKey          string   `protobuf:"bytes,9,opt,name=cp_pay_pri_key,json=cpPayPriKey,proto3" json:"cp_pay_pri_key,omitempty"`
	MasterId             uint32   `protobuf:"varint,10,opt,name=master_id,json=masterId,proto3" json:"master_id,omitempty"`
	AuthUrl              string   `protobuf:"bytes,11,opt,name=auth_url,json=authUrl,proto3" json:"auth_url,omitempty"`
	PayCallbackUrl       string   `protobuf:"bytes,12,opt,name=pay_callback_url,json=payCallbackUrl,proto3" json:"pay_callback_url,omitempty"`
	OrderUrl             string   `protobuf:"bytes,13,opt,name=order_url,json=orderUrl,proto3" json:"order_url,omitempty"`
	OpenPay              bool     `protobuf:"varint,14,opt,name=open_pay,json=openPay,proto3" json:"open_pay,omitempty"`
	MaxUsers             uint32   `protobuf:"varint,15,opt,name=max_users,json=maxUsers,proto3" json:"max_users,omitempty"`
	AppUrl               string   `protobuf:"bytes,16,opt,name=app_url,json=appUrl,proto3" json:"app_url,omitempty"`
	DisplayName          string   `protobuf:"bytes,17,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	KefuEnable           int32    `protobuf:"varint,18,opt,name=kefu_enable,json=kefuEnable,proto3" json:"kefu_enable,omitempty"`
	GiftcodeEnable       int32    `protobuf:"varint,19,opt,name=giftcode_enable,json=giftcodeEnable,proto3" json:"giftcode_enable,omitempty"`
	ScreenshotEnable     int32    `protobuf:"varint,20,opt,name=screenshot_enable,json=screenshotEnable,proto3" json:"screenshot_enable,omitempty"`
	CommunityEnable      int32    `protobuf:"varint,21,opt,name=community_enable,json=communityEnable,proto3" json:"community_enable,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PBChannel) Reset()         { *m = PBChannel{} }
func (m *PBChannel) String() string { return proto.CompactTextString(m) }
func (*PBChannel) ProtoMessage()    {}
func (*PBChannel) Descriptor() ([]byte, []int) {
	return fileDescriptor_5125ba1ef2803df2, []int{5}
}

func (m *PBChannel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBChannel.Unmarshal(m, b)
}
func (m *PBChannel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBChannel.Marshal(b, m, deterministic)
}
func (m *PBChannel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBChannel.Merge(m, src)
}
func (m *PBChannel) XXX_Size() int {
	return xxx_messageInfo_PBChannel.Size(m)
}
func (m *PBChannel) XXX_DiscardUnknown() {
	xxx_messageInfo_PBChannel.DiscardUnknown(m)
}

var xxx_messageInfo_PBChannel proto.InternalMessageInfo

func (m *PBChannel) GetChannelId() uint32 {
	if m != nil {
		return m.ChannelId
	}
	return 0
}

func (m *PBChannel) GetAppId() uint32 {
	if m != nil {
		return m.AppId
	}
	return 0
}

func (m *PBChannel) GetCpAppId() string {
	if m != nil {
		return m.CpAppId
	}
	return ""
}

func (m *PBChannel) GetCpAppKey() string {
	if m != nil {
		return m.CpAppKey
	}
	return ""
}

func (m *PBChannel) GetCpAppSecret() string {
	if m != nil {
		return m.CpAppSecret
	}
	return ""
}

func (m *PBChannel) GetCpId() string {
	if m != nil {
		return m.CpId
	}
	return ""
}

func (m *PBChannel) GetCpPayId() string {
	if m != nil {
		return m.CpPayId
	}
	return ""
}

func (m *PBChannel) GetCpPayKey() string {
	if m != nil {
		return m.CpPayKey
	}
	return ""
}

func (m *PBChannel) GetCpPayPriKey() string {
	if m != nil {
		return m.CpPayPriKey
	}
	return ""
}

func (m *PBChannel) GetMasterId() uint32 {
	if m != nil {
		return m.MasterId
	}
	return 0
}

func (m *PBChannel) GetAuthUrl() string {
	if m != nil {
		return m.AuthUrl
	}
	return ""
}

func (m *PBChannel) GetPayCallbackUrl() string {
	if m != nil {
		return m.PayCallbackUrl
	}
	return ""
}

func (m *PBChannel) GetOrderUrl() string {
	if m != nil {
		return m.OrderUrl
	}
	return ""
}

func (m *PBChannel) GetOpenPay() bool {
	if m != nil {
		return m.OpenPay
	}
	return false
}

func (m *PBChannel) GetMaxUsers() uint32 {
	if m != nil {
		return m.MaxUsers
	}
	return 0
}

func (m *PBChannel) GetAppUrl() string {
	if m != nil {
		return m.AppUrl
	}
	return ""
}

func (m *PBChannel) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *PBChannel) GetKefuEnable() int32 {
	if m != nil {
		return m.KefuEnable
	}
	return 0
}

func (m *PBChannel) GetGiftcodeEnable() int32 {
	if m != nil {
		return m.GiftcodeEnable
	}
	return 0
}

func (m *PBChannel) GetScreenshotEnable() int32 {
	if m != nil {
		return m.ScreenshotEnable
	}
	return 0
}

func (m *PBChannel) GetCommunityEnable() int32 {
	if m != nil {
		return m.CommunityEnable
	}
	return 0
}

// 渠道所属厂商（发行商）
type PBChannelMaster struct {
	MasterId             uint32   `protobuf:"varint,1,opt,name=master_id,json=masterId,proto3" json:"master_id,omitempty"`
	MasterName           string   `protobuf:"bytes,2,opt,name=master_name,json=masterName,proto3" json:"master_name,omitempty"`
	SdkName              string   `protobuf:"bytes,3,opt,name=sdk_name,json=sdkName,proto3" json:"sdk_name,omitempty"`
	NameSuffix           string   `protobuf:"bytes,4,opt,name=name_suffix,json=nameSuffix,proto3" json:"name_suffix,omitempty"`
	AuthUrl              string   `protobuf:"bytes,5,opt,name=auth_url,json=authUrl,proto3" json:"auth_url,omitempty"`
	PayCallbackUrl       string   `protobuf:"bytes,6,opt,name=pay_callback_url,json=payCallbackUrl,proto3" json:"pay_callback_url,omitempty"`
	OrderUrl             string   `protobuf:"bytes,7,opt,name=order_url,json=orderUrl,proto3" json:"order_url,omitempty"`
	SdkClass             string   `protobuf:"bytes,8,opt,name=sdk_class,json=sdkClass,proto3" json:"sdk_class,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PBChannelMaster) Reset()         { *m = PBChannelMaster{} }
func (m *PBChannelMaster) String() string { return proto.CompactTextString(m) }
func (*PBChannelMaster) ProtoMessage()    {}
func (*PBChannelMaster) Descriptor() ([]byte, []int) {
	return fileDescriptor_5125ba1ef2803df2, []int{6}
}

func (m *PBChannelMaster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBChannelMaster.Unmarshal(m, b)
}
func (m *PBChannelMaster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBChannelMaster.Marshal(b, m, deterministic)
}
func (m *PBChannelMaster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBChannelMaster.Merge(m, src)
}
func (m *PBChannelMaster) XXX_Size() int {
	return xxx_messageInfo_PBChannelMaster.Size(m)
}
func (m *PBChannelMaster) XXX_DiscardUnknown() {
	xxx_messageInfo_PBChannelMaster.DiscardUnknown(m)
}

var xxx_messageInfo_PBChannelMaster proto.InternalMessageInfo

func (m *PBChannelMaster) GetMasterId() uint32 {
	if m != nil {
		return m.MasterId
	}
	return 0
}

func (m *PBChannelMaster) GetMasterName() string {
	if m != nil {
		return m.MasterName
	}
	return ""
}

func (m *PBChannelMaster) GetSdkName() string {
	if m != nil {
		return m.SdkName
	}
	return ""
}

func (m *PBChannelMaster) GetNameSuffix() string {
	if m != nil {
		return m.NameSuffix
	}
	return ""
}

func (m *PBChannelMaster) GetAuthUrl() string {
	if m != nil {
		return m.AuthUrl
	}
	return ""
}

func (m *PBChannelMaster) GetPayCallbackUrl() string {
	if m != nil {
		return m.PayCallbackUrl
	}
	return ""
}

func (m *PBChannelMaster) GetOrderUrl() string {
	if m != nil {
		return m.OrderUrl
	}
	return ""
}

func (m *PBChannelMaster) GetSdkClass() string {
	if m != nil {
		return m.SdkClass
	}
	return ""
}

// 游戏信息
type PBGame struct {
	AppId                uint32   `protobuf:"varint,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	AppKey               string   `protobuf:"bytes,2,opt,name=app_key,json=appKey,proto3" json:"app_key,omitempty"`
	AppSecret            string   `protobuf:"bytes,3,opt,name=app_secret,json=appSecret,proto3" json:"app_secret,omitempty"`
	AppRsaPubKey         string   `protobuf:"bytes,4,opt,name=app_rsa_pub_key,json=appRsaPubKey,proto3" json:"app_rsa_pub_key,omitempty"`
	AppRsaPriKey         string   `protobuf:"bytes,5,opt,name=app_rsa_pri_key,json=appRsaPriKey,proto3" json:"app_rsa_pri_key,omitempty"`
	AppName              string   `protobuf:"bytes,6,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	CreateTime           uint64   `protobuf:"varint,7,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	RechargePushAddr     string   `protobuf:"bytes,8,opt,name=recharge_push_addr,json=rechargePushAddr,proto3" json:"recharge_push_addr,omitempty"`
	GameServerAddr       string   `protobuf:"bytes,9,opt,name=game_server_addr,json=gameServerAddr,proto3" json:"game_server_addr,omitempty"`
	TockenSecret         string   `protobuf:"bytes,10,opt,name=tocken_secret,json=tockenSecret,proto3" json:"tocken_secret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PBGame) Reset()         { *m = PBGame{} }
func (m *PBGame) String() string { return proto.CompactTextString(m) }
func (*PBGame) ProtoMessage()    {}
func (*PBGame) Descriptor() ([]byte, []int) {
	return fileDescriptor_5125ba1ef2803df2, []int{7}
}

func (m *PBGame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBGame.Unmarshal(m, b)
}
func (m *PBGame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBGame.Marshal(b, m, deterministic)
}
func (m *PBGame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBGame.Merge(m, src)
}
func (m *PBGame) XXX_Size() int {
	return xxx_messageInfo_PBGame.Size(m)
}
func (m *PBGame) XXX_DiscardUnknown() {
	xxx_messageInfo_PBGame.DiscardUnknown(m)
}

var xxx_messageInfo_PBGame proto.InternalMessageInfo

func (m *PBGame) GetAppId() uint32 {
	if m != nil {
		return m.AppId
	}
	return 0
}

func (m *PBGame) GetAppKey() string {
	if m != nil {
		return m.AppKey
	}
	return ""
}

func (m *PBGame) GetAppSecret() string {
	if m != nil {
		return m.AppSecret
	}
	return ""
}

func (m *PBGame) GetAppRsaPubKey() string {
	if m != nil {
		return m.AppRsaPubKey
	}
	return ""
}

func (m *PBGame) GetAppRsaPriKey() string {
	if m != nil {
		return m.AppRsaPriKey
	}
	return ""
}

func (m *PBGame) GetAppName() string {
	if m != nil {
		return m.AppName
	}
	return ""
}

func (m *PBGame) GetCreateTime() uint64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *PBGame) GetRechargePushAddr() string {
	if m != nil {
		return m.RechargePushAddr
	}
	return ""
}

func (m *PBGame) GetGameServerAddr() string {
	if m != nil {
		return m.GameServerAddr
	}
	return ""
}

func (m *PBGame) GetTockenSecret() string {
	if m != nil {
		return m.TockenSecret
	}
	return ""
}

// 充值订单
type PBRechargeOrder struct {
	ErrorCode            EStateCode `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3,enum=main.EStateCode" json:"error_code,omitempty"`
	GameOrder            string     `protobuf:"bytes,2,opt,name=game_order,json=gameOrder,proto3" json:"game_order,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *PBRechargeOrder) Reset()         { *m = PBRechargeOrder{} }
func (m *PBRechargeOrder) String() string { return proto.CompactTextString(m) }
func (*PBRechargeOrder) ProtoMessage()    {}
func (*PBRechargeOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_5125ba1ef2803df2, []int{8}
}

func (m *PBRechargeOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBRechargeOrder.Unmarshal(m, b)
}
func (m *PBRechargeOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBRechargeOrder.Marshal(b, m, deterministic)
}
func (m *PBRechargeOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBRechargeOrder.Merge(m, src)
}
func (m *PBRechargeOrder) XXX_Size() int {
	return xxx_messageInfo_PBRechargeOrder.Size(m)
}
func (m *PBRechargeOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_PBRechargeOrder.DiscardUnknown(m)
}

var xxx_messageInfo_PBRechargeOrder proto.InternalMessageInfo

func (m *PBRechargeOrder) GetErrorCode() EStateCode {
	if m != nil {
		return m.ErrorCode
	}
	return EStateCode_CODE_DEFAULT
}

func (m *PBRechargeOrder) GetGameOrder() string {
	if m != nil {
		return m.GameOrder
	}
	return ""
}

func init() {
	proto.RegisterEnum("main.EStateCode", EStateCode_name, EStateCode_value)
	proto.RegisterType((*PBSDKServerLoginRequest)(nil), "main.PBSDKServerLoginRequest")
	proto.RegisterType((*PBSDKServerLoginResponse)(nil), "main.PBSDKServerLoginResponse")
	proto.RegisterType((*PBTokenedAccount)(nil), "main.PBTokenedAccount")
	proto.RegisterType((*PBUserExtension)(nil), "main.PBUserExtension")
	proto.RegisterMapType((map[string]int32)(nil), "main.PBUserExtension.IntMapEntry")
	proto.RegisterMapType((map[string]string)(nil), "main.PBUserExtension.StrMapEntry")
	proto.RegisterType((*PBChannelList)(nil), "main.PBChannelList")
	proto.RegisterType((*PBChannel)(nil), "main.PBChannel")
	proto.RegisterType((*PBChannelMaster)(nil), "main.PBChannelMaster")
	proto.RegisterType((*PBGame)(nil), "main.PBGame")
	proto.RegisterType((*PBRechargeOrder)(nil), "main.PBRechargeOrder")
}

func init() { proto.RegisterFile("LoginMessage.proto", fileDescriptor_5125ba1ef2803df2) }

var fileDescriptor_5125ba1ef2803df2 = []byte{
	// 1670 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x57, 0xd9, 0x72, 0xdb, 0xc8,
	0x15, 0x0d, 0xb4, 0x50, 0xe4, 0xd5, 0xd6, 0x6a, 0xdb, 0x12, 0x64, 0xd9, 0x19, 0x0d, 0xa7, 0xa6,
	0xa2, 0xcc, 0xa4, 0x9c, 0x2a, 0xcf, 0x4b, 0x32, 0x95, 0x17, 0x08, 0x6c, 0xd9, 0x28, 0x93, 0x04,
	0xd3, 0x00, 0x35, 0xf6, 0x13, 0xaa, 0x05, 0xb6, 0x24, 0x84, 0x24, 0x80, 0x41, 0x83, 0x8a, 0x98,
	0x7d, 0x9b, 0x2c, 0xce, 0x63, 0x3e, 0x20, 0x6f, 0xa9, 0x7c, 0x4a, 0xbe, 0x22, 0xdf, 0x92, 0xea,
	0x05, 0x20, 0xc5, 0xa4, 0xe2, 0x37, 0xf6, 0xb9, 0xa7, 0xef, 0x72, 0xee, 0xed, 0x46, 0x13, 0x70,
	0x37, 0xbb, 0x49, 0xd2, 0x1e, 0x17, 0x82, 0xdd, 0xf0, 0x17, 0x79, 0x91, 0x95, 0x19, 0xde, 0x98,
	0xb2, 0x24, 0x6d, 0x67, 0x70, 0x34, 0x38, 0x0f, 0x3a, 0x6f, 0x02, 0x5e, 0xdc, 0xf1, 0x42, 0xd1,
	0x28, 0xff, 0x7a, 0xc6, 0x45, 0x89, 0x8f, 0x60, 0xeb, 0x86, 0x4d, 0x79, 0x94, 0x8c, 0x6c, 0xeb,
	0xd4, 0x3a, 0x6b, 0xd1, 0x86, 0x5c, 0x7a, 0x23, 0xfc, 0x1c, 0x20, 0xbe, 0x65, 0x69, 0xca, 0x27,
	0xd2, 0xb6, 0xa6, 0x6c, 0x2d, 0x83, 0x78, 0x23, 0xfc, 0x0c, 0x5a, 0xfc, 0xbe, 0xe4, 0xa9, 0x48,
	0xb2, 0xd4, 0x5e, 0xd7, 0xd6, 0x1a, 0x68, 0xff, 0xc3, 0x02, 0xfb, 0xbf, 0x23, 0x8a, 0x3c, 0x4b,
	0x05, 0xc7, 0x18, 0x36, 0xe2, 0x6c, 0xc4, 0x55, 0xbc, 0x03, 0xaa, 0x7e, 0x63, 0x1b, 0xb6, 0xa6,
	0x3a, 0x71, 0x13, 0xaa, 0x5a, 0xe2, 0xcf, 0x60, 0x63, 0xc4, 0x4a, 0xa6, 0x62, 0x6c, 0xbf, 0x3c,
	0x7c, 0x21, 0x0b, 0x7a, 0x31, 0x38, 0x0f, 0xb3, 0x31, 0x4f, 0xf9, 0xc8, 0x89, 0xe3, 0x6c, 0x96,
	0x96, 0x54, 0x71, 0xa4, 0x17, 0x51, 0xdc, 0x39, 0xa3, 0x51, 0x61, 0x6f, 0x68, 0x2f, 0x66, 0x89,
	0x0f, 0xa1, 0x91, 0x5f, 0x75, 0xa4, 0x9f, 0x4d, 0x5d, 0xa5, 0x5e, 0xb5, 0xbf, 0x59, 0x07, 0xb4,
	0xea, 0x4c, 0x92, 0x67, 0x82, 0x17, 0x9e, 0x96, 0x64, 0x97, 0x9a, 0x15, 0x7e, 0x0a, 0x4d, 0xf9,
	0xab, 0xcf, 0xa6, 0x55, 0x96, 0xf5, 0x5a, 0xea, 0x21, 0x46, 0xe3, 0xa1, 0xde, 0x66, 0xf4, 0xa8,
	0x01, 0x7c, 0x0a, 0xdb, 0x66, 0xa1, 0x36, 0xeb, 0xe4, 0x96, 0x21, 0xfc, 0x18, 0x36, 0x4b, 0x99,
	0x85, 0xc9, 0x4f, 0x2f, 0xf0, 0x17, 0xcb, 0x2a, 0x37, 0x94, 0x02, 0x4f, 0x2a, 0x05, 0xe4, 0x56,
	0x52, 0x19, 0x97, 0xc4, 0x97, 0xa9, 0xd4, 0x7d, 0xb2, 0x9b, 0xaa, 0x82, 0x87, 0x8d, 0x2b, 0x93,
	0x29, 0x17, 0x25, 0x9b, 0xe6, 0x76, 0xeb, 0xd4, 0x3a, 0x5b, 0xa7, 0x0b, 0x40, 0x26, 0x3a, 0xe2,
	0x77, 0x49, 0xcc, 0x95, 0x24, 0x36, 0xe8, 0x44, 0x97, 0x20, 0xa9, 0x71, 0x22, 0xbe, 0xba, 0x4d,
	0x4a, 0x6e, 0x6f, 0x2b, 0xdf, 0xd5, 0x52, 0x4e, 0xcc, 0x15, 0x4b, 0xa3, 0x82, 0x33, 0x91, 0xa5,
	0xf6, 0x8e, 0xd6, 0xe0, 0x8a, 0xa5, 0x54, 0x01, 0xf8, 0x04, 0x5a, 0x93, 0x2c, 0x1e, 0x47, 0x32,
	0x98, 0xbd, 0xab, 0x02, 0x37, 0x25, 0x10, 0x26, 0x53, 0xde, 0xfe, 0xdb, 0x1a, 0xec, 0xaf, 0x94,
	0x24, 0xe7, 0x44, 0x75, 0x5e, 0xcf, 0xa5, 0xee, 0xf0, 0x97, 0xb0, 0x25, 0xca, 0x22, 0x9a, 0xb2,
	0xdc, 0x5e, 0x3b, 0x5d, 0x3f, 0xdb, 0x7e, 0xf9, 0xf1, 0xff, 0x94, 0xe3, 0x45, 0x50, 0x16, 0x3d,
	0x96, 0x93, 0xb4, 0x2c, 0xe6, 0xb4, 0x21, 0xd4, 0x42, 0xee, 0x4d, 0xd2, 0x52, 0xed, 0x5d, 0xff,
	0x7f, 0x7b, 0xbd, 0xb4, 0x5c, 0xec, 0x4d, 0xd4, 0xe2, 0xe9, 0x0f, 0x61, 0x7b, 0xc9, 0x25, 0x46,
	0xb0, 0x3e, 0xe6, 0x73, 0x93, 0x99, 0xfc, 0x29, 0xfb, 0x77, 0xc7, 0x26, 0xb3, 0x6a, 0x30, 0xf4,
	0xe2, 0xcb, 0xb5, 0x1f, 0x58, 0x72, 0xeb, 0x92, 0xc7, 0x0f, 0x6d, 0xdd, 0x5c, 0xda, 0xda, 0xfe,
	0x11, 0xec, 0x0e, 0xce, 0x5d, 0xdd, 0xba, 0x6e, 0x22, 0x4a, 0xfc, 0x39, 0x34, 0x4d, 0x27, 0x85,
	0x6d, 0xa9, 0x1a, 0xf6, 0xab, 0x1a, 0x0c, 0x8d, 0xd6, 0x84, 0xf6, 0x3f, 0x37, 0xa1, 0x55, 0xe3,
	0x2b, 0xe7, 0xd9, 0x5a, 0x1d, 0x8b, 0x27, 0xd0, 0x60, 0x79, 0x5e, 0x1d, 0xf5, 0x5d, 0xba, 0xc9,
	0xf2, 0x5c, 0x8d, 0x7c, 0x2b, 0xce, 0x23, 0x63, 0xd1, 0x63, 0xbd, 0x15, 0xe7, 0x8e, 0xb2, 0x3d,
	0x03, 0x30, 0x36, 0x59, 0x90, 0x9e, 0xe9, 0xa6, 0x32, 0xbe, 0xe1, 0x73, 0xdc, 0x86, 0x5d, 0x63,
	0x15, 0x3c, 0x2e, 0x78, 0x69, 0x06, 0x7b, 0x5b, 0x11, 0x02, 0x05, 0xe1, 0x47, 0xb0, 0x19, 0x2b,
	0xcf, 0x0d, 0xdd, 0xe2, 0x78, 0x11, 0x32, 0x67, 0x73, 0x69, 0xd8, 0xaa, 0x42, 0x0e, 0xd8, 0xbc,
	0x0e, 0x29, 0x6d, 0x32, 0x64, 0xb3, 0x0a, 0x39, 0x60, 0x73, 0x19, 0xf2, 0x13, 0xd8, 0x33, 0xd6,
	0xbc, 0x48, 0x14, 0xa3, 0x55, 0xc5, 0x1c, 0xb0, 0xf9, 0xa0, 0x48, 0x24, 0xe9, 0x04, 0x5a, 0x53,
	0x26, 0x4a, 0x5e, 0x48, 0xf7, 0xa0, 0x6a, 0x6d, 0x6a, 0xc0, 0x1b, 0xe1, 0x63, 0x68, 0xb2, 0x59,
	0x79, 0x1b, 0xcd, 0x8a, 0x89, 0x9a, 0xee, 0x16, 0xdd, 0x92, 0xeb, 0x61, 0x31, 0xc1, 0x67, 0x80,
	0xa4, 0xe7, 0x98, 0x4d, 0x26, 0x57, 0x2c, 0x1e, 0x2b, 0x8a, 0x9e, 0xf1, 0xbd, 0x9c, 0xcd, 0x5d,
	0x03, 0x4b, 0xe6, 0x09, 0xb4, 0xb2, 0x62, 0xc4, 0x0b, 0x45, 0xd9, 0xd5, 0x39, 0x2a, 0x40, 0x1a,
	0x8f, 0xa1, 0x99, 0xe5, 0x3c, 0x95, 0x59, 0xda, 0x7b, 0xa7, 0xd6, 0x59, 0x93, 0x6e, 0xc9, 0xf5,
	0x80, 0x99, 0xcc, 0xee, 0x23, 0x79, 0xa5, 0x08, 0x7b, 0xbf, 0xca, 0xec, 0x5e, 0x0e, 0xa7, 0x90,
	0xf7, 0xb4, 0xd4, 0x52, 0xba, 0x44, 0xfa, 0x06, 0x63, 0x79, 0x2e, 0x1d, 0x7e, 0x0c, 0x3b, 0xa3,
	0x44, 0xe4, 0x13, 0x36, 0x8f, 0x52, 0x79, 0xb7, 0x1c, 0x98, 0x23, 0xab, 0x31, 0x75, 0xb7, 0x7c,
	0x04, 0xdb, 0x63, 0x7e, 0x3d, 0x8b, 0x78, 0xca, 0xae, 0x26, 0xdc, 0xc6, 0x6a, 0xcc, 0x40, 0x42,
	0x44, 0x21, 0xf8, 0x3b, 0xb0, 0x7f, 0x93, 0x5c, 0x97, 0xf2, 0x26, 0xae, 0x48, 0x8f, 0x14, 0x69,
	0xaf, 0x82, 0x0d, 0xf1, 0x73, 0x38, 0x10, 0x71, 0xc1, 0x79, 0x2a, 0x6e, 0xb3, 0xb2, 0xa2, 0x3e,
	0x56, 0x54, 0xb4, 0x30, 0x18, 0xf2, 0x77, 0x01, 0xc5, 0xd9, 0x74, 0x3a, 0x4b, 0x93, 0x72, 0x5e,
	0x71, 0x9f, 0x28, 0xee, 0x7e, 0x8d, 0x6b, 0x6a, 0xfb, 0xbd, 0x3a, 0xfe, 0x66, 0x54, 0x7b, 0xaa,
	0x1b, 0x0f, 0x1b, 0x65, 0xad, 0x34, 0xea, 0x23, 0xd8, 0x36, 0xc6, 0x74, 0x71, 0x1b, 0x83, 0x86,
	0x54, 0xcd, 0xc7, 0xd0, 0x14, 0xa3, 0xb1, 0xb6, 0x9a, 0xb9, 0x15, 0xa3, 0x71, 0x25, 0x87, 0x84,
	0x23, 0x31, 0xbb, 0xbe, 0x4e, 0xee, 0xcd, 0xe0, 0x82, 0x84, 0x02, 0x85, 0x3c, 0x98, 0x82, 0xcd,
	0x0f, 0x4f, 0x41, 0xe3, 0xc3, 0x53, 0xb0, 0xb5, 0x32, 0x05, 0x27, 0xea, 0x6b, 0x11, 0xc5, 0x13,
	0x26, 0x44, 0x35, 0xc6, 0x62, 0x34, 0x76, 0xe5, 0xba, 0xfd, 0xef, 0x35, 0x68, 0x0c, 0xce, 0x5f,
	0xc9, 0x54, 0x17, 0xa7, 0xd2, 0x5a, 0x3e, 0x95, 0x66, 0x18, 0xe4, 0x84, 0xaf, 0xd5, 0xc3, 0x20,
	0x87, 0xfb, 0x39, 0xc0, 0xd2, 0x89, 0x33, 0x9f, 0x21, 0x56, 0x9f, 0xb7, 0x4f, 0x61, 0x5f, 0x9a,
	0x0b, 0xc1, 0xa2, 0x7c, 0x76, 0xb5, 0x74, 0x6c, 0x77, 0x58, 0x9e, 0x53, 0xc1, 0x06, 0xb3, 0x2b,
	0xe9, 0x65, 0x99, 0x66, 0x0e, 0xd2, 0xe6, 0x03, 0x9a, 0x3e, 0x49, 0x52, 0xa6, 0x3c, 0xd7, 0x12,
	0x37, 0x8c, 0x4c, 0x79, 0x5e, 0x49, 0x1c, 0x17, 0x9c, 0x95, 0x5c, 0xdf, 0xf6, 0xb2, 0xfc, 0x0d,
	0x0a, 0x1a, 0x92, 0xf7, 0x3d, 0xfe, 0x1e, 0xe0, 0x82, 0xc7, 0xb7, 0xac, 0xb8, 0xe1, 0x51, 0x3e,
	0x13, 0xb7, 0x11, 0x93, 0x1f, 0x6d, 0xad, 0x04, 0xaa, 0x2c, 0x83, 0x99, 0xb8, 0x55, 0x5f, 0xef,
	0x33, 0x40, 0xea, 0x91, 0x22, 0xd4, 0x6b, 0x42, 0x73, 0xf5, 0xd1, 0xde, 0x93, 0xb8, 0x7e, 0x64,
	0x28, 0xe6, 0x27, 0xb0, 0x5b, 0x66, 0xf1, 0x98, 0xa7, 0x95, 0x06, 0xfa, 0x0b, 0xb6, 0xa3, 0x41,
	0x2d, 0x43, 0x9b, 0xc9, 0x61, 0xa3, 0x26, 0x88, 0x2f, 0x7b, 0x82, 0xbf, 0x0f, 0xc0, 0x8b, 0x22,
	0x2b, 0xa2, 0xfa, 0x65, 0xb2, 0xf7, 0x12, 0xe9, 0xab, 0x95, 0x04, 0x25, 0x2b, 0xb9, 0x9b, 0x8d,
	0x38, 0x6d, 0x29, 0x8e, 0xfc, 0x29, 0x95, 0x56, 0x29, 0xa9, 0x96, 0x56, 0xcf, 0x23, 0x89, 0x28,
	0x7f, 0x9f, 0xfd, 0xbd, 0x09, 0xb0, 0xd8, 0x88, 0x11, 0xec, 0xb8, 0x7e, 0x87, 0x44, 0x1d, 0x72,
	0xe1, 0x0c, 0xbb, 0x21, 0xfa, 0x16, 0x3e, 0x30, 0x48, 0x30, 0x74, 0x5d, 0x12, 0x04, 0xe8, 0x5f,
	0x16, 0xc6, 0xb0, 0xa7, 0xa0, 0x57, 0x4e, 0x8f, 0x44, 0x7d, 0xbf, 0x4f, 0x90, 0xbc, 0x96, 0x0f,
	0x14, 0xe6, 0xbe, 0x76, 0xfa, 0x7d, 0xd2, 0xd5, 0xb0, 0x7c, 0x2d, 0x20, 0x05, 0xf7, 0x9c, 0x20,
	0x24, 0x54, 0xa3, 0xd7, 0xd8, 0x86, 0xc7, 0xda, 0x67, 0xe7, 0x4d, 0xe4, 0x0c, 0xc3, 0xd7, 0xd1,
	0x85, 0xe3, 0x75, 0x49, 0x07, 0xdd, 0xd4, 0xfc, 0x65, 0xf4, 0xb6, 0x0e, 0x38, 0x0c, 0x2a, 0x1f,
	0x09, 0x3e, 0x04, 0xac, 0xb0, 0x4b, 0x42, 0xbd, 0x8b, 0x77, 0x15, 0xf7, 0x27, 0xb5, 0x87, 0xd0,
	0x7f, 0x43, 0xfa, 0x11, 0xa1, 0xd4, 0xa7, 0x68, 0xbc, 0xc8, 0xc3, 0xef, 0x93, 0x77, 0x06, 0x9d,
	0xd4, 0xa8, 0x4f, 0x3b, 0x84, 0x1a, 0x74, 0x8a, 0x1f, 0xc1, 0xbe, 0xce, 0xce, 0x7b, 0x55, 0x39,
	0x48, 0x6b, 0x70, 0xe0, 0xbc, 0x8b, 0xdc, 0xae, 0x1f, 0x90, 0x0e, 0xca, 0xf0, 0x53, 0x38, 0x5c,
	0x29, 0x3a, 0x8c, 0x7a, 0x4e, 0xe8, 0xbe, 0x46, 0x39, 0x3e, 0x82, 0x47, 0x46, 0xc9, 0x4b, 0xcf,
	0x25, 0x91, 0xd7, 0xd1, 0x89, 0x7f, 0xfd, 0xa0, 0xf8, 0xc0, 0xa5, 0xde, 0x20, 0xd4, 0x96, 0x02,
	0x1f, 0xc3, 0x13, 0x65, 0xf1, 0xfa, 0x97, 0x4e, 0xd7, 0xeb, 0x44, 0x03, 0x27, 0x08, 0xbe, 0xf2,
	0x69, 0x07, 0x89, 0xa5, 0xf0, 0xd4, 0xe9, 0x45, 0x3d, 0x2f, 0x08, 0x50, 0x59, 0xa7, 0x4f, 0x28,
	0x8d, 0xdc, 0x41, 0xe4, 0xfa, 0xfd, 0x3e, 0x9a, 0xd5, 0x81, 0x0d, 0x4a, 0xc9, 0x8f, 0x87, 0x24,
	0x08, 0xd1, 0xdd, 0x2a, 0x5d, 0x4a, 0x8c, 0x7e, 0x8a, 0xbf, 0x0d, 0x4f, 0x97, 0x75, 0x54, 0xbf,
	0x17, 0x75, 0xdc, 0xd7, 0xe9, 0xca, 0x5d, 0x8e, 0x1b, 0x7a, 0x97, 0x44, 0x71, 0xd0, 0xbc, 0x4e,
	0x77, 0x09, 0x95, 0x1d, 0xea, 0xa0, 0x9f, 0x3d, 0xc8, 0x81, 0xbc, 0x0d, 0xa3, 0x0b, 0x9f, 0xf6,
	0x9c, 0x10, 0xfd, 0xbc, 0x1e, 0x13, 0x69, 0x08, 0x48, 0xbf, 0x13, 0x05, 0xbd, 0x00, 0xfd, 0xa2,
	0x6e, 0xe6, 0xe0, 0xb5, 0xdf, 0xaf, 0x1c, 0x76, 0xd0, 0x2f, 0x6b, 0x7a, 0x40, 0xa8, 0x52, 0xf1,
	0x7c, 0x18, 0xbc, 0x43, 0xbf, 0xaa, 0xe9, 0x8e, 0xeb, 0xfa, 0xc3, 0x7e, 0x18, 0x9d, 0x3b, 0x7d,
	0xd2, 0x41, 0xbf, 0xc6, 0x47, 0x06, 0x37, 0xbd, 0x7f, 0x3b, 0xf0, 0x28, 0xe9, 0xa0, 0xdf, 0x58,
	0xf8, 0xd0, 0xf8, 0xe9, 0xf9, 0xe7, 0x5e, 0x97, 0x98, 0xa6, 0xfe, 0xd6, 0xc2, 0xc7, 0xa6, 0xb8,
	0x3e, 0x21, 0x2a, 0x15, 0xa3, 0x02, 0xfa, 0x9d, 0x85, 0x4f, 0x4c, 0x6f, 0x25, 0xaa, 0x32, 0x0d,
	0x7d, 0x3f, 0xba, 0x70, 0x82, 0x10, 0xfd, 0xde, 0xc2, 0xcf, 0xc1, 0xae, 0x7b, 0xa8, 0x86, 0xd2,
	0xbf, 0x24, 0x34, 0xea, 0x7a, 0x3d, 0x2f, 0x44, 0x7f, 0xb0, 0xf0, 0x33, 0x38, 0x32, 0x6a, 0x54,
	0xf6, 0x9e, 0x17, 0x68, 0x41, 0xbf, 0xb1, 0xea, 0x2c, 0xdd, 0xa1, 0xa7, 0xbd, 0x76, 0xfd, 0xfe,
	0x2b, 0xf4, 0x47, 0x0b, 0x7f, 0x0a, 0xa7, 0xda, 0x40, 0x89, 0x13, 0x92, 0xe8, 0xd2, 0x0b, 0x42,
	0x9f, 0xd6, 0x45, 0xea, 0xa4, 0xff, 0xb4, 0xd8, 0x4f, 0x7a, 0x8e, 0xd7, 0x8d, 0xbc, 0x80, 0xbc,
	0xf5, 0xc2, 0x00, 0xfd, 0x79, 0x11, 0x56, 0x1b, 0xb4, 0xe6, 0x66, 0xdb, 0x5f, 0x16, 0xb5, 0xaa,
	0xa3, 0x55, 0x35, 0xc1, 0xa7, 0xe8, 0xfd, 0xa2, 0xd6, 0x85, 0x49, 0xd6, 0xd3, 0x19, 0x12, 0xf4,
	0x57, 0xeb, 0xaa, 0xa1, 0xfe, 0xa0, 0x7d, 0xf1, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x97, 0xad,
	0x10, 0x58, 0xb6, 0x0d, 0x00, 0x00,
}
