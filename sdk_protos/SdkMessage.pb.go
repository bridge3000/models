// Code generated by protoc-gen-go. DO NOT EDIT.
// source: SdkMessage.proto

package sdk_protos

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EStateCode int32

const (
	// TODO：编码统一分段
	EStateCode_CODE_DEFAULT                         EStateCode = 0
	EStateCode_CODE_SUCCESS                         EStateCode = 200
	EStateCode_CODE_GAME_NONE                       EStateCode = 100
	EStateCode_CODE_CHANNEL_NONE                    EStateCode = 101
	EStateCode_CODE_EMAIL_NOT_EXIST                 EStateCode = 102
	EStateCode_CODE_SDK_AUTH_FAILED                 EStateCode = 103
	EStateCode_CODE_AUTH_FAILED                     EStateCode = 104
	EStateCode_CODE_USER_NONE                       EStateCode = 105
	EStateCode_CODE_VERIFY_FAILED                   EStateCode = 106
	EStateCode_CODE_TOKEN_ERROR                     EStateCode = 107
	EStateCode_CODE_MONEY_ERROR                     EStateCode = 108
	EStateCode_CODE_ORDER_ERROR                     EStateCode = 109
	EStateCode_CODE_SIGN_ERROR                      EStateCode = 110
	EStateCode_CODE_PAY_CLOSED                      EStateCode = 111
	EStateCode_CODE_CHANNEL_NOT_MATCH               EStateCode = 112
	EStateCode_CODE_DEVICE_ID_NONE                  EStateCode = 113
	EStateCode_CODE_PASSWORD_TOO_SHORT              EStateCode = 114
	EStateCode_CODE_INVALID_PASSWORD                EStateCode = 115
	EStateCode_CODE_PARAM_MISS                      EStateCode = 116
	EStateCode_CODE_ERR_CP_CONN                     EStateCode = 117
	EStateCode_CODE_ERR_CP_REQUEST                  EStateCode = 118
	EStateCode_CODE_ERR_CP_AUTH                     EStateCode = 119
	EStateCode_CODE_VERIFY_CODE_NOT_MATCH           EStateCode = 120
	EStateCode_CODE_ERR_ACTIVE_CODE                 EStateCode = 121
	EStateCode_CODE_ACTIVE_CODE_USED                EStateCode = 122
	EStateCode_CODE_ERR_EXT_FORMAT                  EStateCode = 123
	EStateCode_CODE_ERR_SEND_SMS                    EStateCode = 124
	EStateCode_CODE_PHONE_ACTIVED                   EStateCode = 125
	EStateCode_CODE_SERVICE_BUSY                    EStateCode = 126
	EStateCode_CODE_ACCOUNT_BANED                   EStateCode = 127
	EStateCode_CODE_TOKEN_EXPIRED                   EStateCode = 128
	EStateCode_CODE_MOBILE_ERROR                    EStateCode = 129
	EStateCode_CODE_NEED_SMS_VERIFY                 EStateCode = 130
	EStateCode_CODE_EMAIL_SEND_TOO_FAST             EStateCode = 131
	EStateCode_CODE_SDK_USER_OVER_LIMIT             EStateCode = 132
	EStateCode_CODE_USDK_USER_MISMATCH              EStateCode = 133
	EStateCode_CODE_CUID_TOO_LONG                   EStateCode = 134
	EStateCode_CODE_CREATE_VISTOR_ACCOUNT_ERROR     EStateCode = 135
	EStateCode_CODE_EMAIL_IS_EXISTS                 EStateCode = 136
	EStateCode_CODE_EMAIL_FORMAT_ERROR              EStateCode = 137
	EStateCode_CODE_AUTH_CODE_ERROR                 EStateCode = 138
	EStateCode_CODE_AUTH_CODE_OVERDUE               EStateCode = 139
	EStateCode_CODE_CREATE_ORDER_FAIL               EStateCode = 140
	EStateCode_CODE_ACCOUNT_ERROR                   EStateCode = 141
	EStateCode_CODE_VERIFY_RECEIPT_ERROR            EStateCode = 142
	EStateCode_CODE_ROLE_OFFLINE                    EStateCode = 143
	EStateCode_CODE_NO_ORDER                        EStateCode = 144
	EStateCode_CODE_ORDER_STATUS_ERR                EStateCode = 145
	EStateCode_CODE_ORDER_GOODS_ERR                 EStateCode = 146
	EStateCode_CODE_ERR_REMAIN_ONE_LOGIN_METHOD     EStateCode = 147
	EStateCode_CODE_ERR_IS_EXIST_SAME_PLATFORM_USER EStateCode = 148
	EStateCode_CODE_ERR_NETWORK                     EStateCode = 149
	EStateCode_CODE_ERR_ONE_SNS_BIND_ONE_ACCOUNT    EStateCode = 150
	EStateCode_CODE_ERR_ACCOUNT_HAS_BINDED_EMAIL    EStateCode = 151
	EStateCode_CODE_ERR_CONTENT_HAS_SENSITIVE_WORD  EStateCode = 152
	EStateCode_CODE_GAME_ID_ERROR                   EStateCode = 153
	EStateCode_CODE_RECHARGE_ITEM_ERROR             EStateCode = 154
	EStateCode_CODE_ROLE_NOT_EXIST                  EStateCode = 155
)

var EStateCode_name = map[int32]string{
	0:   "CODE_DEFAULT",
	200: "CODE_SUCCESS",
	100: "CODE_GAME_NONE",
	101: "CODE_CHANNEL_NONE",
	102: "CODE_EMAIL_NOT_EXIST",
	103: "CODE_SDK_AUTH_FAILED",
	104: "CODE_AUTH_FAILED",
	105: "CODE_USER_NONE",
	106: "CODE_VERIFY_FAILED",
	107: "CODE_TOKEN_ERROR",
	108: "CODE_MONEY_ERROR",
	109: "CODE_ORDER_ERROR",
	110: "CODE_SIGN_ERROR",
	111: "CODE_PAY_CLOSED",
	112: "CODE_CHANNEL_NOT_MATCH",
	113: "CODE_DEVICE_ID_NONE",
	114: "CODE_PASSWORD_TOO_SHORT",
	115: "CODE_INVALID_PASSWORD",
	116: "CODE_PARAM_MISS",
	117: "CODE_ERR_CP_CONN",
	118: "CODE_ERR_CP_REQUEST",
	119: "CODE_ERR_CP_AUTH",
	120: "CODE_VERIFY_CODE_NOT_MATCH",
	121: "CODE_ERR_ACTIVE_CODE",
	122: "CODE_ACTIVE_CODE_USED",
	123: "CODE_ERR_EXT_FORMAT",
	124: "CODE_ERR_SEND_SMS",
	125: "CODE_PHONE_ACTIVED",
	126: "CODE_SERVICE_BUSY",
	127: "CODE_ACCOUNT_BANED",
	128: "CODE_TOKEN_EXPIRED",
	129: "CODE_MOBILE_ERROR",
	130: "CODE_NEED_SMS_VERIFY",
	131: "CODE_EMAIL_SEND_TOO_FAST",
	132: "CODE_SDK_USER_OVER_LIMIT",
	133: "CODE_USDK_USER_MISMATCH",
	134: "CODE_CUID_TOO_LONG",
	135: "CODE_CREATE_VISTOR_ACCOUNT_ERROR",
	136: "CODE_EMAIL_IS_EXISTS",
	137: "CODE_EMAIL_FORMAT_ERROR",
	138: "CODE_AUTH_CODE_ERROR",
	139: "CODE_AUTH_CODE_OVERDUE",
	140: "CODE_CREATE_ORDER_FAIL",
	141: "CODE_ACCOUNT_ERROR",
	142: "CODE_VERIFY_RECEIPT_ERROR",
	143: "CODE_ROLE_OFFLINE",
	144: "CODE_NO_ORDER",
	145: "CODE_ORDER_STATUS_ERR",
	146: "CODE_ORDER_GOODS_ERR",
	147: "CODE_ERR_REMAIN_ONE_LOGIN_METHOD",
	148: "CODE_ERR_IS_EXIST_SAME_PLATFORM_USER",
	149: "CODE_ERR_NETWORK",
	150: "CODE_ERR_ONE_SNS_BIND_ONE_ACCOUNT",
	151: "CODE_ERR_ACCOUNT_HAS_BINDED_EMAIL",
	152: "CODE_ERR_CONTENT_HAS_SENSITIVE_WORD",
	153: "CODE_GAME_ID_ERROR",
	154: "CODE_RECHARGE_ITEM_ERROR",
	155: "CODE_ROLE_NOT_EXIST",
}

var EStateCode_value = map[string]int32{
	"CODE_DEFAULT":                         0,
	"CODE_SUCCESS":                         200,
	"CODE_GAME_NONE":                       100,
	"CODE_CHANNEL_NONE":                    101,
	"CODE_EMAIL_NOT_EXIST":                 102,
	"CODE_SDK_AUTH_FAILED":                 103,
	"CODE_AUTH_FAILED":                     104,
	"CODE_USER_NONE":                       105,
	"CODE_VERIFY_FAILED":                   106,
	"CODE_TOKEN_ERROR":                     107,
	"CODE_MONEY_ERROR":                     108,
	"CODE_ORDER_ERROR":                     109,
	"CODE_SIGN_ERROR":                      110,
	"CODE_PAY_CLOSED":                      111,
	"CODE_CHANNEL_NOT_MATCH":               112,
	"CODE_DEVICE_ID_NONE":                  113,
	"CODE_PASSWORD_TOO_SHORT":              114,
	"CODE_INVALID_PASSWORD":                115,
	"CODE_PARAM_MISS":                      116,
	"CODE_ERR_CP_CONN":                     117,
	"CODE_ERR_CP_REQUEST":                  118,
	"CODE_ERR_CP_AUTH":                     119,
	"CODE_VERIFY_CODE_NOT_MATCH":           120,
	"CODE_ERR_ACTIVE_CODE":                 121,
	"CODE_ACTIVE_CODE_USED":                122,
	"CODE_ERR_EXT_FORMAT":                  123,
	"CODE_ERR_SEND_SMS":                    124,
	"CODE_PHONE_ACTIVED":                   125,
	"CODE_SERVICE_BUSY":                    126,
	"CODE_ACCOUNT_BANED":                   127,
	"CODE_TOKEN_EXPIRED":                   128,
	"CODE_MOBILE_ERROR":                    129,
	"CODE_NEED_SMS_VERIFY":                 130,
	"CODE_EMAIL_SEND_TOO_FAST":             131,
	"CODE_SDK_USER_OVER_LIMIT":             132,
	"CODE_USDK_USER_MISMATCH":              133,
	"CODE_CUID_TOO_LONG":                   134,
	"CODE_CREATE_VISTOR_ACCOUNT_ERROR":     135,
	"CODE_EMAIL_IS_EXISTS":                 136,
	"CODE_EMAIL_FORMAT_ERROR":              137,
	"CODE_AUTH_CODE_ERROR":                 138,
	"CODE_AUTH_CODE_OVERDUE":               139,
	"CODE_CREATE_ORDER_FAIL":               140,
	"CODE_ACCOUNT_ERROR":                   141,
	"CODE_VERIFY_RECEIPT_ERROR":            142,
	"CODE_ROLE_OFFLINE":                    143,
	"CODE_NO_ORDER":                        144,
	"CODE_ORDER_STATUS_ERR":                145,
	"CODE_ORDER_GOODS_ERR":                 146,
	"CODE_ERR_REMAIN_ONE_LOGIN_METHOD":     147,
	"CODE_ERR_IS_EXIST_SAME_PLATFORM_USER": 148,
	"CODE_ERR_NETWORK":                     149,
	"CODE_ERR_ONE_SNS_BIND_ONE_ACCOUNT":    150,
	"CODE_ERR_ACCOUNT_HAS_BINDED_EMAIL":    151,
	"CODE_ERR_CONTENT_HAS_SENSITIVE_WORD":  152,
	"CODE_GAME_ID_ERROR":                   153,
	"CODE_RECHARGE_ITEM_ERROR":             154,
	"CODE_ROLE_NOT_EXIST":                  155,
}

func (x EStateCode) String() string {
	return proto.EnumName(EStateCode_name, int32(x))
}

func (EStateCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_78e43d48a789d5e5, []int{0}
}

//语言编号
type Lang int32

const (
	Lang_CN Lang = 0
	Lang_TW Lang = 1
	Lang_EN Lang = 2
	Lang_JP Lang = 3
	Lang_KR Lang = 4
)

var Lang_name = map[int32]string{
	0: "CN",
	1: "TW",
	2: "EN",
	3: "JP",
	4: "KR",
}

var Lang_value = map[string]int32{
	"CN": 0,
	"TW": 1,
	"EN": 2,
	"JP": 3,
	"KR": 4,
}

func (x Lang) String() string {
	return proto.EnumName(Lang_name, int32(x))
}

func (Lang) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_78e43d48a789d5e5, []int{1}
}

//文本内容类型
type ContentId int32

const (
	ContentId_PRIVACY ContentId = 0
	ContentId_SERVICE ContentId = 1
)

var ContentId_name = map[int32]string{
	0: "PRIVACY",
	1: "SERVICE",
}

var ContentId_value = map[string]int32{
	"PRIVACY": 0,
	"SERVICE": 1,
}

func (x ContentId) String() string {
	return proto.EnumName(ContentId_name, int32(x))
}

func (ContentId) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_78e43d48a789d5e5, []int{2}
}

// 服务器状态
type ServerStatus int32

const (
	ServerStatus_REST        ServerStatus = 0
	ServerStatus_SERVEROK    ServerStatus = 1
	ServerStatus_RECOMMENDED ServerStatus = 2
	ServerStatus_HOT         ServerStatus = 3
	ServerStatus_FULL        ServerStatus = 4
	ServerStatus_AUTO        ServerStatus = -1
)

var ServerStatus_name = map[int32]string{
	0:  "REST",
	1:  "SERVEROK",
	2:  "RECOMMENDED",
	3:  "HOT",
	4:  "FULL",
	-1: "AUTO",
}

var ServerStatus_value = map[string]int32{
	"REST":        0,
	"SERVEROK":    1,
	"RECOMMENDED": 2,
	"HOT":         3,
	"FULL":        4,
	"AUTO":        -1,
}

func (x ServerStatus) String() string {
	return proto.EnumName(ServerStatus_name, int32(x))
}

func (ServerStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_78e43d48a789d5e5, []int{3}
}

// 支付平台
type PayPlatform int32

const (
	PayPlatform_DEFAULT    PayPlatform = 0
	PayPlatform_APPSTORE   PayPlatform = 1
	PayPlatform_GOOGLEPLAY PayPlatform = 2
	PayPlatform_ONESTORE   PayPlatform = 3
	PayPlatform_MYCARD     PayPlatform = 5
	PayPlatform_CODAPAY    PayPlatform = 6
	PayPlatform_CODASHOP   PayPlatform = 7
	PayPlatform_PAYPAL     PayPlatform = 8
)

var PayPlatform_name = map[int32]string{
	0: "DEFAULT",
	1: "APPSTORE",
	2: "GOOGLEPLAY",
	3: "ONESTORE",
	5: "MYCARD",
	6: "CODAPAY",
	7: "CODASHOP",
	8: "PAYPAL",
}

var PayPlatform_value = map[string]int32{
	"DEFAULT":    0,
	"APPSTORE":   1,
	"GOOGLEPLAY": 2,
	"ONESTORE":   3,
	"MYCARD":     5,
	"CODAPAY":    6,
	"CODASHOP":   7,
	"PAYPAL":     8,
}

func (x PayPlatform) String() string {
	return proto.EnumName(PayPlatform_name, int32(x))
}

func (PayPlatform) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_78e43d48a789d5e5, []int{4}
}

// 登录方式
type LoginType int32

const (
	LoginType_GUEST LoginType = 0
	LoginType_EMAIL LoginType = 1
	LoginType_SNS   LoginType = 2
	LoginType_QUICK LoginType = 3
)

var LoginType_name = map[int32]string{
	0: "GUEST",
	1: "EMAIL",
	2: "SNS",
	3: "QUICK",
}

var LoginType_value = map[string]int32{
	"GUEST": 0,
	"EMAIL": 1,
	"SNS":   2,
	"QUICK": 3,
}

func (x LoginType) String() string {
	return proto.EnumName(LoginType_name, int32(x))
}

func (LoginType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_78e43d48a789d5e5, []int{5}
}

// 登录方式
type PSLoginStatus int32

const (
	PSLoginStatus_REG_SUCCESS        PSLoginStatus = 0
	PSLoginStatus_LOGIN_SUCCESS      PSLoginStatus = 1
	PSLoginStatus_NEED_CONFIRM_EMAIL PSLoginStatus = 2
)

var PSLoginStatus_name = map[int32]string{
	0: "REG_SUCCESS",
	1: "LOGIN_SUCCESS",
	2: "NEED_CONFIRM_EMAIL",
}

var PSLoginStatus_value = map[string]int32{
	"REG_SUCCESS":        0,
	"LOGIN_SUCCESS":      1,
	"NEED_CONFIRM_EMAIL": 2,
}

func (x PSLoginStatus) String() string {
	return proto.EnumName(PSLoginStatus_name, int32(x))
}

func (PSLoginStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_78e43d48a789d5e5, []int{6}
}

//SNS账号登录
type HaiwaiSdkLogin struct {
	Code                   EStateCode `protobuf:"varint,1,opt,name=code,proto3,enum=sdk.protos.EStateCode" json:"code,omitempty"`
	AccountId              int64      `protobuf:"varint,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	ChannelId              int32      `protobuf:"varint,3,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	SdkId                  int32      `protobuf:"varint,4,opt,name=sdk_id,json=sdkId,proto3" json:"sdk_id,omitempty"`
	SdkUserId              string     `protobuf:"bytes,5,opt,name=sdk_user_id,json=sdkUserId,proto3" json:"sdk_user_id,omitempty"`
	SdkUserName            string     `protobuf:"bytes,6,opt,name=sdk_user_name,json=sdkUserName,proto3" json:"sdk_user_name,omitempty"`
	AccessToken            string     `protobuf:"bytes,7,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	DeviceId               string     `protobuf:"bytes,8,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	IsWhite                int32      `protobuf:"varint,9,opt,name=is_white,json=isWhite,proto3" json:"is_white,omitempty"`
	GameId                 int32      `protobuf:"varint,10,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	TokenExpiredSeconds    int32      `protobuf:"varint,11,opt,name=token_expired_seconds,json=tokenExpiredSeconds,proto3" json:"token_expired_seconds,omitempty"`
	IsNew                  bool       `protobuf:"varint,13,opt,name=is_new,json=isNew,proto3" json:"is_new,omitempty"`
	RegionId               string     `protobuf:"bytes,14,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
	LockTime               int64      `protobuf:"varint,15,opt,name=lock_time,json=lockTime,proto3" json:"lock_time,omitempty"`
	SdkCumulativeDaysLogin int32      `protobuf:"varint,17,opt,name=sdk_cumulative_days_login,json=sdkCumulativeDaysLogin,proto3" json:"sdk_cumulative_days_login,omitempty"`
	SdkContinuousDaysLogin int32      `protobuf:"varint,18,opt,name=sdk_continuous_days_login,json=sdkContinuousDaysLogin,proto3" json:"sdk_continuous_days_login,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}   `json:"-"`
	XXX_unrecognized       []byte     `json:"-"`
	XXX_sizecache          int32      `json:"-"`
}

func (m *HaiwaiSdkLogin) Reset()         { *m = HaiwaiSdkLogin{} }
func (m *HaiwaiSdkLogin) String() string { return proto.CompactTextString(m) }
func (*HaiwaiSdkLogin) ProtoMessage()    {}
func (*HaiwaiSdkLogin) Descriptor() ([]byte, []int) {
	return fileDescriptor_78e43d48a789d5e5, []int{0}
}

func (m *HaiwaiSdkLogin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HaiwaiSdkLogin.Unmarshal(m, b)
}
func (m *HaiwaiSdkLogin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HaiwaiSdkLogin.Marshal(b, m, deterministic)
}
func (m *HaiwaiSdkLogin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HaiwaiSdkLogin.Merge(m, src)
}
func (m *HaiwaiSdkLogin) XXX_Size() int {
	return xxx_messageInfo_HaiwaiSdkLogin.Size(m)
}
func (m *HaiwaiSdkLogin) XXX_DiscardUnknown() {
	xxx_messageInfo_HaiwaiSdkLogin.DiscardUnknown(m)
}

var xxx_messageInfo_HaiwaiSdkLogin proto.InternalMessageInfo

func (m *HaiwaiSdkLogin) GetCode() EStateCode {
	if m != nil {
		return m.Code
	}
	return EStateCode_CODE_DEFAULT
}

func (m *HaiwaiSdkLogin) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *HaiwaiSdkLogin) GetChannelId() int32 {
	if m != nil {
		return m.ChannelId
	}
	return 0
}

func (m *HaiwaiSdkLogin) GetSdkId() int32 {
	if m != nil {
		return m.SdkId
	}
	return 0
}

func (m *HaiwaiSdkLogin) GetSdkUserId() string {
	if m != nil {
		return m.SdkUserId
	}
	return ""
}

func (m *HaiwaiSdkLogin) GetSdkUserName() string {
	if m != nil {
		return m.SdkUserName
	}
	return ""
}

func (m *HaiwaiSdkLogin) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *HaiwaiSdkLogin) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *HaiwaiSdkLogin) GetIsWhite() int32 {
	if m != nil {
		return m.IsWhite
	}
	return 0
}

func (m *HaiwaiSdkLogin) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *HaiwaiSdkLogin) GetTokenExpiredSeconds() int32 {
	if m != nil {
		return m.TokenExpiredSeconds
	}
	return 0
}

func (m *HaiwaiSdkLogin) GetIsNew() bool {
	if m != nil {
		return m.IsNew
	}
	return false
}

func (m *HaiwaiSdkLogin) GetRegionId() string {
	if m != nil {
		return m.RegionId
	}
	return ""
}

func (m *HaiwaiSdkLogin) GetLockTime() int64 {
	if m != nil {
		return m.LockTime
	}
	return 0
}

func (m *HaiwaiSdkLogin) GetSdkCumulativeDaysLogin() int32 {
	if m != nil {
		return m.SdkCumulativeDaysLogin
	}
	return 0
}

func (m *HaiwaiSdkLogin) GetSdkContinuousDaysLogin() int32 {
	if m != nil {
		return m.SdkContinuousDaysLogin
	}
	return 0
}

//游客
type Vistor struct {
	Code                   EStateCode `protobuf:"varint,1,opt,name=code,proto3,enum=sdk.protos.EStateCode" json:"code,omitempty"`
	VistorUserName         string     `protobuf:"bytes,2,opt,name=vistor_user_name,json=vistorUserName,proto3" json:"vistor_user_name,omitempty"`
	VistorPassword         string     `protobuf:"bytes,3,opt,name=vistor_password,json=vistorPassword,proto3" json:"vistor_password,omitempty"`
	DeviceId               string     `protobuf:"bytes,4,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	AccountId              int64      `protobuf:"varint,5,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	ChannelId              int32      `protobuf:"varint,6,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	AccessToken            string     `protobuf:"bytes,7,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	TokenExpiredSeconds    int32      `protobuf:"varint,8,opt,name=token_expired_seconds,json=tokenExpiredSeconds,proto3" json:"token_expired_seconds,omitempty"`
	GameId                 int32      `protobuf:"varint,9,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	RegionId               string     `protobuf:"bytes,10,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
	IsWhite                int32      `protobuf:"varint,11,opt,name=is_white,json=isWhite,proto3" json:"is_white,omitempty"`
	LockTime               int64      `protobuf:"varint,12,opt,name=lock_time,json=lockTime,proto3" json:"lock_time,omitempty"`
	UserLoginDays          int32      `protobuf:"varint,13,opt,name=user_login_days,json=userLoginDays,proto3" json:"user_login_days,omitempty"`
	SdkCumulativeDaysLogin int32      `protobuf:"varint,14,opt,name=sdk_cumulative_days_login,json=sdkCumulativeDaysLogin,proto3" json:"sdk_cumulative_days_login,omitempty"`
	SdkContinuousDaysLogin int32      `protobuf:"varint,15,opt,name=sdk_continuous_days_login,json=sdkContinuousDaysLogin,proto3" json:"sdk_continuous_days_login,omitempty"`
	IsBinded               bool       `protobuf:"varint,16,opt,name=is_binded,json=isBinded,proto3" json:"is_binded,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}   `json:"-"`
	XXX_unrecognized       []byte     `json:"-"`
	XXX_sizecache          int32      `json:"-"`
}

func (m *Vistor) Reset()         { *m = Vistor{} }
func (m *Vistor) String() string { return proto.CompactTextString(m) }
func (*Vistor) ProtoMessage()    {}
func (*Vistor) Descriptor() ([]byte, []int) {
	return fileDescriptor_78e43d48a789d5e5, []int{1}
}

func (m *Vistor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vistor.Unmarshal(m, b)
}
func (m *Vistor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vistor.Marshal(b, m, deterministic)
}
func (m *Vistor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vistor.Merge(m, src)
}
func (m *Vistor) XXX_Size() int {
	return xxx_messageInfo_Vistor.Size(m)
}
func (m *Vistor) XXX_DiscardUnknown() {
	xxx_messageInfo_Vistor.DiscardUnknown(m)
}

var xxx_messageInfo_Vistor proto.InternalMessageInfo

func (m *Vistor) GetCode() EStateCode {
	if m != nil {
		return m.Code
	}
	return EStateCode_CODE_DEFAULT
}

func (m *Vistor) GetVistorUserName() string {
	if m != nil {
		return m.VistorUserName
	}
	return ""
}

func (m *Vistor) GetVistorPassword() string {
	if m != nil {
		return m.VistorPassword
	}
	return ""
}

func (m *Vistor) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *Vistor) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *Vistor) GetChannelId() int32 {
	if m != nil {
		return m.ChannelId
	}
	return 0
}

func (m *Vistor) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *Vistor) GetTokenExpiredSeconds() int32 {
	if m != nil {
		return m.TokenExpiredSeconds
	}
	return 0
}

func (m *Vistor) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *Vistor) GetRegionId() string {
	if m != nil {
		return m.RegionId
	}
	return ""
}

func (m *Vistor) GetIsWhite() int32 {
	if m != nil {
		return m.IsWhite
	}
	return 0
}

func (m *Vistor) GetLockTime() int64 {
	if m != nil {
		return m.LockTime
	}
	return 0
}

func (m *Vistor) GetUserLoginDays() int32 {
	if m != nil {
		return m.UserLoginDays
	}
	return 0
}

func (m *Vistor) GetSdkCumulativeDaysLogin() int32 {
	if m != nil {
		return m.SdkCumulativeDaysLogin
	}
	return 0
}

func (m *Vistor) GetSdkContinuousDaysLogin() int32 {
	if m != nil {
		return m.SdkContinuousDaysLogin
	}
	return 0
}

func (m *Vistor) GetIsBinded() bool {
	if m != nil {
		return m.IsBinded
	}
	return false
}

//邮箱注册登录
type EmailUser struct {
	Code                   EStateCode `protobuf:"varint,1,opt,name=code,proto3,enum=sdk.protos.EStateCode" json:"code,omitempty"`
	Email                  string     `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	EmailAuthCode          int32      `protobuf:"varint,3,opt,name=email_auth_code,json=emailAuthCode,proto3" json:"email_auth_code,omitempty"`
	EmailPassword          string     `protobuf:"bytes,4,opt,name=email_password,json=emailPassword,proto3" json:"email_password,omitempty"`
	ChannelId              int32      `protobuf:"varint,5,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	DeviceId               string     `protobuf:"bytes,6,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	AccountId              int64      `protobuf:"varint,7,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	AuthCodeType           int32      `protobuf:"varint,8,opt,name=auth_code_type,json=authCodeType,proto3" json:"auth_code_type,omitempty"`
	AccessToken            string     `protobuf:"bytes,9,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	TokenExpiredSeconds    int32      `protobuf:"varint,10,opt,name=token_expired_seconds,json=tokenExpiredSeconds,proto3" json:"token_expired_seconds,omitempty"`
	Lang                   Lang       `protobuf:"varint,11,opt,name=lang,proto3,enum=sdk.protos.Lang" json:"lang,omitempty"`
	GameId                 int32      `protobuf:"varint,12,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	RegionId               string     `protobuf:"bytes,13,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
	IsWhite                int32      `protobuf:"varint,14,opt,name=is_white,json=isWhite,proto3" json:"is_white,omitempty"`
	LockTime               int64      `protobuf:"varint,15,opt,name=lock_time,json=lockTime,proto3" json:"lock_time,omitempty"`
	UserLoginDays          int32      `protobuf:"varint,16,opt,name=user_login_days,json=userLoginDays,proto3" json:"user_login_days,omitempty"`
	SdkCumulativeDaysLogin int32      `protobuf:"varint,17,opt,name=sdk_cumulative_days_login,json=sdkCumulativeDaysLogin,proto3" json:"sdk_cumulative_days_login,omitempty"`
	SdkContinuousDaysLogin int32      `protobuf:"varint,18,opt,name=sdk_continuous_days_login,json=sdkContinuousDaysLogin,proto3" json:"sdk_continuous_days_login,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}   `json:"-"`
	XXX_unrecognized       []byte     `json:"-"`
	XXX_sizecache          int32      `json:"-"`
}

func (m *EmailUser) Reset()         { *m = EmailUser{} }
func (m *EmailUser) String() string { return proto.CompactTextString(m) }
func (*EmailUser) ProtoMessage()    {}
func (*EmailUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_78e43d48a789d5e5, []int{2}
}

func (m *EmailUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmailUser.Unmarshal(m, b)
}
func (m *EmailUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmailUser.Marshal(b, m, deterministic)
}
func (m *EmailUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmailUser.Merge(m, src)
}
func (m *EmailUser) XXX_Size() int {
	return xxx_messageInfo_EmailUser.Size(m)
}
func (m *EmailUser) XXX_DiscardUnknown() {
	xxx_messageInfo_EmailUser.DiscardUnknown(m)
}

var xxx_messageInfo_EmailUser proto.InternalMessageInfo

func (m *EmailUser) GetCode() EStateCode {
	if m != nil {
		return m.Code
	}
	return EStateCode_CODE_DEFAULT
}

func (m *EmailUser) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *EmailUser) GetEmailAuthCode() int32 {
	if m != nil {
		return m.EmailAuthCode
	}
	return 0
}

func (m *EmailUser) GetEmailPassword() string {
	if m != nil {
		return m.EmailPassword
	}
	return ""
}

func (m *EmailUser) GetChannelId() int32 {
	if m != nil {
		return m.ChannelId
	}
	return 0
}

func (m *EmailUser) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *EmailUser) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *EmailUser) GetAuthCodeType() int32 {
	if m != nil {
		return m.AuthCodeType
	}
	return 0
}

func (m *EmailUser) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *EmailUser) GetTokenExpiredSeconds() int32 {
	if m != nil {
		return m.TokenExpiredSeconds
	}
	return 0
}

func (m *EmailUser) GetLang() Lang {
	if m != nil {
		return m.Lang
	}
	return Lang_CN
}

func (m *EmailUser) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *EmailUser) GetRegionId() string {
	if m != nil {
		return m.RegionId
	}
	return ""
}

func (m *EmailUser) GetIsWhite() int32 {
	if m != nil {
		return m.IsWhite
	}
	return 0
}

func (m *EmailUser) GetLockTime() int64 {
	if m != nil {
		return m.LockTime
	}
	return 0
}

func (m *EmailUser) GetUserLoginDays() int32 {
	if m != nil {
		return m.UserLoginDays
	}
	return 0
}

func (m *EmailUser) GetSdkCumulativeDaysLogin() int32 {
	if m != nil {
		return m.SdkCumulativeDaysLogin
	}
	return 0
}

func (m *EmailUser) GetSdkContinuousDaysLogin() int32 {
	if m != nil {
		return m.SdkContinuousDaysLogin
	}
	return 0
}

//登录通用返回数据结构体
type LoginResponse struct {
	Code                   EStateCode `protobuf:"varint,1,opt,name=code,proto3,enum=sdk.protos.EStateCode" json:"code,omitempty"`
	AccountId              int64      `protobuf:"varint,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	RegionId               string     `protobuf:"bytes,3,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
	SdkCumulativeDaysLogin int32      `protobuf:"varint,4,opt,name=sdk_cumulative_days_login,json=sdkCumulativeDaysLogin,proto3" json:"sdk_cumulative_days_login,omitempty"`
	SdkContinuousDaysLogin int32      `protobuf:"varint,5,opt,name=sdk_continuous_days_login,json=sdkContinuousDaysLogin,proto3" json:"sdk_continuous_days_login,omitempty"`
	AccessToken            string     `protobuf:"bytes,6,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	TokenExpiredSeconds    int32      `protobuf:"varint,7,opt,name=token_expired_seconds,json=tokenExpiredSeconds,proto3" json:"token_expired_seconds,omitempty"`
	IsWhite                int32      `protobuf:"varint,8,opt,name=is_white,json=isWhite,proto3" json:"is_white,omitempty"`
	IsNew                  bool       `protobuf:"varint,9,opt,name=is_new,json=isNew,proto3" json:"is_new,omitempty"`
	LockTime               int64      `protobuf:"varint,10,opt,name=lock_time,json=lockTime,proto3" json:"lock_time,omitempty"`
	IsBinded               bool       `protobuf:"varint,11,opt,name=is_binded,json=isBinded,proto3" json:"is_binded,omitempty"`
	DisplayName            string     `protobuf:"bytes,12,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	IsFirstLogin           bool       `protobuf:"varint,13,opt,name=is_first_login,json=isFirstLogin,proto3" json:"is_first_login,omitempty"`
	LoginTime              string     `protobuf:"bytes,14,opt,name=login_time,json=loginTime,proto3" json:"login_time,omitempty"`
	LoginType              LoginType  `protobuf:"varint,15,opt,name=login_type,json=loginType,proto3,enum=sdk.protos.LoginType" json:"login_type,omitempty"`
	RegTime                string     `protobuf:"bytes,16,opt,name=reg_time,json=regTime,proto3" json:"reg_time,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}   `json:"-"`
	XXX_unrecognized       []byte     `json:"-"`
	XXX_sizecache          int32      `json:"-"`
}

func (m *LoginResponse) Reset()         { *m = LoginResponse{} }
func (m *LoginResponse) String() string { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()    {}
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_78e43d48a789d5e5, []int{3}
}

func (m *LoginResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginResponse.Unmarshal(m, b)
}
func (m *LoginResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginResponse.Marshal(b, m, deterministic)
}
func (m *LoginResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginResponse.Merge(m, src)
}
func (m *LoginResponse) XXX_Size() int {
	return xxx_messageInfo_LoginResponse.Size(m)
}
func (m *LoginResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoginResponse proto.InternalMessageInfo

func (m *LoginResponse) GetCode() EStateCode {
	if m != nil {
		return m.Code
	}
	return EStateCode_CODE_DEFAULT
}

func (m *LoginResponse) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *LoginResponse) GetRegionId() string {
	if m != nil {
		return m.RegionId
	}
	return ""
}

func (m *LoginResponse) GetSdkCumulativeDaysLogin() int32 {
	if m != nil {
		return m.SdkCumulativeDaysLogin
	}
	return 0
}

func (m *LoginResponse) GetSdkContinuousDaysLogin() int32 {
	if m != nil {
		return m.SdkContinuousDaysLogin
	}
	return 0
}

func (m *LoginResponse) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *LoginResponse) GetTokenExpiredSeconds() int32 {
	if m != nil {
		return m.TokenExpiredSeconds
	}
	return 0
}

func (m *LoginResponse) GetIsWhite() int32 {
	if m != nil {
		return m.IsWhite
	}
	return 0
}

func (m *LoginResponse) GetIsNew() bool {
	if m != nil {
		return m.IsNew
	}
	return false
}

func (m *LoginResponse) GetLockTime() int64 {
	if m != nil {
		return m.LockTime
	}
	return 0
}

func (m *LoginResponse) GetIsBinded() bool {
	if m != nil {
		return m.IsBinded
	}
	return false
}

func (m *LoginResponse) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *LoginResponse) GetIsFirstLogin() bool {
	if m != nil {
		return m.IsFirstLogin
	}
	return false
}

func (m *LoginResponse) GetLoginTime() string {
	if m != nil {
		return m.LoginTime
	}
	return ""
}

func (m *LoginResponse) GetLoginType() LoginType {
	if m != nil {
		return m.LoginType
	}
	return LoginType_GUEST
}

func (m *LoginResponse) GetRegTime() string {
	if m != nil {
		return m.RegTime
	}
	return ""
}

//充值建立订单(SDK客户端)
type CreateRechargeOrder struct {
	Code                 EStateCode  `protobuf:"varint,1,opt,name=code,proto3,enum=sdk.protos.EStateCode" json:"code,omitempty"`
	GameId               int32       `protobuf:"varint,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	AccountId            int64       `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	RoleId               string      `protobuf:"bytes,4,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	ProductId            string      `protobuf:"bytes,5,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Amount               float32     `protobuf:"fixed32,6,opt,name=amount,proto3" json:"amount,omitempty"`
	OutTradeNo           string      `protobuf:"bytes,7,opt,name=out_trade_no,json=outTradeNo,proto3" json:"out_trade_no,omitempty"`
	Attach               string      `protobuf:"bytes,8,opt,name=attach,proto3" json:"attach,omitempty"`
	GoodsName            string      `protobuf:"bytes,9,opt,name=goods_name,json=goodsName,proto3" json:"goods_name,omitempty"`
	Description          string      `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`
	Sign                 string      `protobuf:"bytes,11,opt,name=sign,proto3" json:"sign,omitempty"`
	Ip                   string      `protobuf:"bytes,12,opt,name=ip,proto3" json:"ip,omitempty"`
	ServerId             int32       `protobuf:"varint,13,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	PayPlatform          PayPlatform `protobuf:"varint,14,opt,name=pay_platform,json=payPlatform,proto3,enum=sdk.protos.PayPlatform" json:"pay_platform,omitempty"`
	CurrencyCode         string      `protobuf:"bytes,15,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	AuthCode             string      `protobuf:"bytes,16,opt,name=auth_code,json=authCode,proto3" json:"auth_code,omitempty"`
	ShopId               int32       `protobuf:"varint,17,opt,name=shop_id,json=shopId,proto3" json:"shop_id,omitempty"`
	ShopItemId           int64       `protobuf:"varint,18,opt,name=shop_item_id,json=shopItemId,proto3" json:"shop_item_id,omitempty"`
	TradeType            string      `protobuf:"bytes,19,opt,name=trade_type,json=tradeType,proto3" json:"trade_type,omitempty"`
	TransactionUrl       string      `protobuf:"bytes,20,opt,name=transaction_url,json=transactionUrl,proto3" json:"transaction_url,omitempty"`
	PlatformOutTradeNo   string      `protobuf:"bytes,21,opt,name=platform_out_trade_no,json=platformOutTradeNo,proto3" json:"platform_out_trade_no,omitempty"`
	SdkInfo              string      `protobuf:"bytes,22,opt,name=sdk_info,json=sdkInfo,proto3" json:"sdk_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CreateRechargeOrder) Reset()         { *m = CreateRechargeOrder{} }
func (m *CreateRechargeOrder) String() string { return proto.CompactTextString(m) }
func (*CreateRechargeOrder) ProtoMessage()    {}
func (*CreateRechargeOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_78e43d48a789d5e5, []int{4}
}

func (m *CreateRechargeOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRechargeOrder.Unmarshal(m, b)
}
func (m *CreateRechargeOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRechargeOrder.Marshal(b, m, deterministic)
}
func (m *CreateRechargeOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRechargeOrder.Merge(m, src)
}
func (m *CreateRechargeOrder) XXX_Size() int {
	return xxx_messageInfo_CreateRechargeOrder.Size(m)
}
func (m *CreateRechargeOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRechargeOrder.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRechargeOrder proto.InternalMessageInfo

func (m *CreateRechargeOrder) GetCode() EStateCode {
	if m != nil {
		return m.Code
	}
	return EStateCode_CODE_DEFAULT
}

func (m *CreateRechargeOrder) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *CreateRechargeOrder) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *CreateRechargeOrder) GetRoleId() string {
	if m != nil {
		return m.RoleId
	}
	return ""
}

func (m *CreateRechargeOrder) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *CreateRechargeOrder) GetAmount() float32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *CreateRechargeOrder) GetOutTradeNo() string {
	if m != nil {
		return m.OutTradeNo
	}
	return ""
}

func (m *CreateRechargeOrder) GetAttach() string {
	if m != nil {
		return m.Attach
	}
	return ""
}

func (m *CreateRechargeOrder) GetGoodsName() string {
	if m != nil {
		return m.GoodsName
	}
	return ""
}

func (m *CreateRechargeOrder) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateRechargeOrder) GetSign() string {
	if m != nil {
		return m.Sign
	}
	return ""
}

func (m *CreateRechargeOrder) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *CreateRechargeOrder) GetServerId() int32 {
	if m != nil {
		return m.ServerId
	}
	return 0
}

func (m *CreateRechargeOrder) GetPayPlatform() PayPlatform {
	if m != nil {
		return m.PayPlatform
	}
	return PayPlatform_DEFAULT
}

func (m *CreateRechargeOrder) GetCurrencyCode() string {
	if m != nil {
		return m.CurrencyCode
	}
	return ""
}

func (m *CreateRechargeOrder) GetAuthCode() string {
	if m != nil {
		return m.AuthCode
	}
	return ""
}

func (m *CreateRechargeOrder) GetShopId() int32 {
	if m != nil {
		return m.ShopId
	}
	return 0
}

func (m *CreateRechargeOrder) GetShopItemId() int64 {
	if m != nil {
		return m.ShopItemId
	}
	return 0
}

func (m *CreateRechargeOrder) GetTradeType() string {
	if m != nil {
		return m.TradeType
	}
	return ""
}

func (m *CreateRechargeOrder) GetTransactionUrl() string {
	if m != nil {
		return m.TransactionUrl
	}
	return ""
}

func (m *CreateRechargeOrder) GetPlatformOutTradeNo() string {
	if m != nil {
		return m.PlatformOutTradeNo
	}
	return ""
}

func (m *CreateRechargeOrder) GetSdkInfo() string {
	if m != nil {
		return m.SdkInfo
	}
	return ""
}

//IAP(苹果 谷歌)充值完成收据验证
type VerifyReceipt struct {
	Code                 EStateCode `protobuf:"varint,1,opt,name=code,proto3,enum=sdk.protos.EStateCode" json:"code,omitempty"`
	GameId               int32      `protobuf:"varint,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	AccountId            int64      `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	RoleId               string     `protobuf:"bytes,4,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	OutTradeNo           string     `protobuf:"bytes,5,opt,name=out_trade_no,json=outTradeNo,proto3" json:"out_trade_no,omitempty"`
	ServerId             int32      `protobuf:"varint,6,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Receipt              string     `protobuf:"bytes,7,opt,name=receipt,proto3" json:"receipt,omitempty"`
	IapTransactionId     string     `protobuf:"bytes,8,opt,name=iap_transaction_id,json=iapTransactionId,proto3" json:"iap_transaction_id,omitempty"`
	PackageName          string     `protobuf:"bytes,9,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	ProductId            string     `protobuf:"bytes,10,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	PayPlatform          int32      `protobuf:"varint,11,opt,name=pay_platform,json=payPlatform,proto3" json:"pay_platform,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *VerifyReceipt) Reset()         { *m = VerifyReceipt{} }
func (m *VerifyReceipt) String() string { return proto.CompactTextString(m) }
func (*VerifyReceipt) ProtoMessage()    {}
func (*VerifyReceipt) Descriptor() ([]byte, []int) {
	return fileDescriptor_78e43d48a789d5e5, []int{5}
}

func (m *VerifyReceipt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyReceipt.Unmarshal(m, b)
}
func (m *VerifyReceipt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyReceipt.Marshal(b, m, deterministic)
}
func (m *VerifyReceipt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyReceipt.Merge(m, src)
}
func (m *VerifyReceipt) XXX_Size() int {
	return xxx_messageInfo_VerifyReceipt.Size(m)
}
func (m *VerifyReceipt) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyReceipt.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyReceipt proto.InternalMessageInfo

func (m *VerifyReceipt) GetCode() EStateCode {
	if m != nil {
		return m.Code
	}
	return EStateCode_CODE_DEFAULT
}

func (m *VerifyReceipt) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *VerifyReceipt) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *VerifyReceipt) GetRoleId() string {
	if m != nil {
		return m.RoleId
	}
	return ""
}

func (m *VerifyReceipt) GetOutTradeNo() string {
	if m != nil {
		return m.OutTradeNo
	}
	return ""
}

func (m *VerifyReceipt) GetServerId() int32 {
	if m != nil {
		return m.ServerId
	}
	return 0
}

func (m *VerifyReceipt) GetReceipt() string {
	if m != nil {
		return m.Receipt
	}
	return ""
}

func (m *VerifyReceipt) GetIapTransactionId() string {
	if m != nil {
		return m.IapTransactionId
	}
	return ""
}

func (m *VerifyReceipt) GetPackageName() string {
	if m != nil {
		return m.PackageName
	}
	return ""
}

func (m *VerifyReceipt) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *VerifyReceipt) GetPayPlatform() int32 {
	if m != nil {
		return m.PayPlatform
	}
	return 0
}

//充值完成回调
type RechargeNotify struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	GameId               int32    `protobuf:"varint,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	AccountId            int64    `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	RoleId               string   `protobuf:"bytes,4,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	RechargeItemId       int32    `protobuf:"varint,5,opt,name=recharge_item_id,json=rechargeItemId,proto3" json:"recharge_item_id,omitempty"`
	Amount               int32    `protobuf:"varint,6,opt,name=amount,proto3" json:"amount,omitempty"`
	OutTradeNo           string   `protobuf:"bytes,7,opt,name=out_trade_no,json=outTradeNo,proto3" json:"out_trade_no,omitempty"`
	Attach               string   `protobuf:"bytes,8,opt,name=attach,proto3" json:"attach,omitempty"`
	Sign                 string   `protobuf:"bytes,9,opt,name=sign,proto3" json:"sign,omitempty"`
	ServerId             int32    `protobuf:"varint,10,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Ttp                  int64    `protobuf:"varint,11,opt,name=ttp,proto3" json:"ttp,omitempty"`
	CurrencyCode         string   `protobuf:"bytes,12,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	IapTransactionId     string   `protobuf:"bytes,13,opt,name=iap_transaction_id,json=iapTransactionId,proto3" json:"iap_transaction_id,omitempty"`
	PayPlatform          int32    `protobuf:"varint,14,opt,name=pay_platform,json=payPlatform,proto3" json:"pay_platform,omitempty"`
	StrAmount            string   `protobuf:"bytes,15,opt,name=str_amount,json=strAmount,proto3" json:"str_amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RechargeNotify) Reset()         { *m = RechargeNotify{} }
func (m *RechargeNotify) String() string { return proto.CompactTextString(m) }
func (*RechargeNotify) ProtoMessage()    {}
func (*RechargeNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_78e43d48a789d5e5, []int{6}
}

func (m *RechargeNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RechargeNotify.Unmarshal(m, b)
}
func (m *RechargeNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RechargeNotify.Marshal(b, m, deterministic)
}
func (m *RechargeNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RechargeNotify.Merge(m, src)
}
func (m *RechargeNotify) XXX_Size() int {
	return xxx_messageInfo_RechargeNotify.Size(m)
}
func (m *RechargeNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_RechargeNotify.DiscardUnknown(m)
}

var xxx_messageInfo_RechargeNotify proto.InternalMessageInfo

func (m *RechargeNotify) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *RechargeNotify) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *RechargeNotify) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *RechargeNotify) GetRoleId() string {
	if m != nil {
		return m.RoleId
	}
	return ""
}

func (m *RechargeNotify) GetRechargeItemId() int32 {
	if m != nil {
		return m.RechargeItemId
	}
	return 0
}

func (m *RechargeNotify) GetAmount() int32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *RechargeNotify) GetOutTradeNo() string {
	if m != nil {
		return m.OutTradeNo
	}
	return ""
}

func (m *RechargeNotify) GetAttach() string {
	if m != nil {
		return m.Attach
	}
	return ""
}

func (m *RechargeNotify) GetSign() string {
	if m != nil {
		return m.Sign
	}
	return ""
}

func (m *RechargeNotify) GetServerId() int32 {
	if m != nil {
		return m.ServerId
	}
	return 0
}

func (m *RechargeNotify) GetTtp() int64 {
	if m != nil {
		return m.Ttp
	}
	return 0
}

func (m *RechargeNotify) GetCurrencyCode() string {
	if m != nil {
		return m.CurrencyCode
	}
	return ""
}

func (m *RechargeNotify) GetIapTransactionId() string {
	if m != nil {
		return m.IapTransactionId
	}
	return ""
}

func (m *RechargeNotify) GetPayPlatform() int32 {
	if m != nil {
		return m.PayPlatform
	}
	return 0
}

func (m *RechargeNotify) GetStrAmount() string {
	if m != nil {
		return m.StrAmount
	}
	return ""
}

//已绑定的列表
type BindSdkList struct {
	Code                 EStateCode `protobuf:"varint,1,opt,name=code,proto3,enum=sdk.protos.EStateCode" json:"code,omitempty"`
	AccountId            int64      `protobuf:"varint,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Sdks                 []int32    `protobuf:"varint,3,rep,packed,name=sdks,proto3" json:"sdks,omitempty"`
	Email                string     `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	GameId               int32      `protobuf:"varint,5,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *BindSdkList) Reset()         { *m = BindSdkList{} }
func (m *BindSdkList) String() string { return proto.CompactTextString(m) }
func (*BindSdkList) ProtoMessage()    {}
func (*BindSdkList) Descriptor() ([]byte, []int) {
	return fileDescriptor_78e43d48a789d5e5, []int{7}
}

func (m *BindSdkList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BindSdkList.Unmarshal(m, b)
}
func (m *BindSdkList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BindSdkList.Marshal(b, m, deterministic)
}
func (m *BindSdkList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BindSdkList.Merge(m, src)
}
func (m *BindSdkList) XXX_Size() int {
	return xxx_messageInfo_BindSdkList.Size(m)
}
func (m *BindSdkList) XXX_DiscardUnknown() {
	xxx_messageInfo_BindSdkList.DiscardUnknown(m)
}

var xxx_messageInfo_BindSdkList proto.InternalMessageInfo

func (m *BindSdkList) GetCode() EStateCode {
	if m != nil {
		return m.Code
	}
	return EStateCode_CODE_DEFAULT
}

func (m *BindSdkList) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *BindSdkList) GetSdks() []int32 {
	if m != nil {
		return m.Sdks
	}
	return nil
}

func (m *BindSdkList) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *BindSdkList) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

//解绑SDK账号登录方式
type UnbindSdkLogin struct {
	Code                 EStateCode `protobuf:"varint,1,opt,name=code,proto3,enum=sdk.protos.EStateCode" json:"code,omitempty"`
	AccountId            int64      `protobuf:"varint,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	SdkId                int32      `protobuf:"varint,3,opt,name=sdk_id,json=sdkId,proto3" json:"sdk_id,omitempty"`
	SdkUserId            string     `protobuf:"bytes,4,opt,name=sdk_user_id,json=sdkUserId,proto3" json:"sdk_user_id,omitempty"`
	GameId               int32      `protobuf:"varint,5,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UnbindSdkLogin) Reset()         { *m = UnbindSdkLogin{} }
func (m *UnbindSdkLogin) String() string { return proto.CompactTextString(m) }
func (*UnbindSdkLogin) ProtoMessage()    {}
func (*UnbindSdkLogin) Descriptor() ([]byte, []int) {
	return fileDescriptor_78e43d48a789d5e5, []int{8}
}

func (m *UnbindSdkLogin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnbindSdkLogin.Unmarshal(m, b)
}
func (m *UnbindSdkLogin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnbindSdkLogin.Marshal(b, m, deterministic)
}
func (m *UnbindSdkLogin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnbindSdkLogin.Merge(m, src)
}
func (m *UnbindSdkLogin) XXX_Size() int {
	return xxx_messageInfo_UnbindSdkLogin.Size(m)
}
func (m *UnbindSdkLogin) XXX_DiscardUnknown() {
	xxx_messageInfo_UnbindSdkLogin.DiscardUnknown(m)
}

var xxx_messageInfo_UnbindSdkLogin proto.InternalMessageInfo

func (m *UnbindSdkLogin) GetCode() EStateCode {
	if m != nil {
		return m.Code
	}
	return EStateCode_CODE_DEFAULT
}

func (m *UnbindSdkLogin) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *UnbindSdkLogin) GetSdkId() int32 {
	if m != nil {
		return m.SdkId
	}
	return 0
}

func (m *UnbindSdkLogin) GetSdkUserId() string {
	if m != nil {
		return m.SdkUserId
	}
	return ""
}

func (m *UnbindSdkLogin) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

type Server struct {
	ServerId             int32        `protobuf:"varint,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	ServerName           string       `protobuf:"bytes,2,opt,name=server_name,json=serverName,proto3" json:"server_name,omitempty"`
	IpAddress            string       `protobuf:"bytes,3,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	LinkPort             int32        `protobuf:"varint,4,opt,name=link_port,json=linkPort,proto3" json:"link_port,omitempty"`
	LinkCount            int32        `protobuf:"varint,5,opt,name=link_count,json=linkCount,proto3" json:"link_count,omitempty"`
	State                ServerStatus `protobuf:"varint,6,opt,name=state,proto3,enum=sdk.protos.ServerStatus" json:"state,omitempty"`
	Domain               string       `protobuf:"bytes,7,opt,name=domain,proto3" json:"domain,omitempty"`
	Tag                  int32        `protobuf:"varint,8,opt,name=tag,proto3" json:"tag,omitempty"`
	ClosedText           string       `protobuf:"bytes,9,opt,name=closed_text,json=closedText,proto3" json:"closed_text,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Server) Reset()         { *m = Server{} }
func (m *Server) String() string { return proto.CompactTextString(m) }
func (*Server) ProtoMessage()    {}
func (*Server) Descriptor() ([]byte, []int) {
	return fileDescriptor_78e43d48a789d5e5, []int{9}
}

func (m *Server) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Server.Unmarshal(m, b)
}
func (m *Server) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Server.Marshal(b, m, deterministic)
}
func (m *Server) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Server.Merge(m, src)
}
func (m *Server) XXX_Size() int {
	return xxx_messageInfo_Server.Size(m)
}
func (m *Server) XXX_DiscardUnknown() {
	xxx_messageInfo_Server.DiscardUnknown(m)
}

var xxx_messageInfo_Server proto.InternalMessageInfo

func (m *Server) GetServerId() int32 {
	if m != nil {
		return m.ServerId
	}
	return 0
}

func (m *Server) GetServerName() string {
	if m != nil {
		return m.ServerName
	}
	return ""
}

func (m *Server) GetIpAddress() string {
	if m != nil {
		return m.IpAddress
	}
	return ""
}

func (m *Server) GetLinkPort() int32 {
	if m != nil {
		return m.LinkPort
	}
	return 0
}

func (m *Server) GetLinkCount() int32 {
	if m != nil {
		return m.LinkCount
	}
	return 0
}

func (m *Server) GetState() ServerStatus {
	if m != nil {
		return m.State
	}
	return ServerStatus_REST
}

func (m *Server) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *Server) GetTag() int32 {
	if m != nil {
		return m.Tag
	}
	return 0
}

func (m *Server) GetClosedText() string {
	if m != nil {
		return m.ClosedText
	}
	return ""
}

type ServerList struct {
	Code                 EStateCode `protobuf:"varint,1,opt,name=code,proto3,enum=sdk.protos.EStateCode" json:"code,omitempty"`
	GameId               int32      `protobuf:"varint,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Tag                  int32      `protobuf:"varint,3,opt,name=tag,proto3" json:"tag,omitempty"`
	Servers              []*Server  `protobuf:"bytes,4,rep,name=servers,proto3" json:"servers,omitempty"`
	AccountId            int64      `protobuf:"varint,5,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	RegionId             string     `protobuf:"bytes,6,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ServerList) Reset()         { *m = ServerList{} }
func (m *ServerList) String() string { return proto.CompactTextString(m) }
func (*ServerList) ProtoMessage()    {}
func (*ServerList) Descriptor() ([]byte, []int) {
	return fileDescriptor_78e43d48a789d5e5, []int{10}
}

func (m *ServerList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerList.Unmarshal(m, b)
}
func (m *ServerList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerList.Marshal(b, m, deterministic)
}
func (m *ServerList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerList.Merge(m, src)
}
func (m *ServerList) XXX_Size() int {
	return xxx_messageInfo_ServerList.Size(m)
}
func (m *ServerList) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerList.DiscardUnknown(m)
}

var xxx_messageInfo_ServerList proto.InternalMessageInfo

func (m *ServerList) GetCode() EStateCode {
	if m != nil {
		return m.Code
	}
	return EStateCode_CODE_DEFAULT
}

func (m *ServerList) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *ServerList) GetTag() int32 {
	if m != nil {
		return m.Tag
	}
	return 0
}

func (m *ServerList) GetServers() []*Server {
	if m != nil {
		return m.Servers
	}
	return nil
}

func (m *ServerList) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *ServerList) GetRegionId() string {
	if m != nil {
		return m.RegionId
	}
	return ""
}

type LangContents struct {
	Contents             map[int32]string `protobuf:"bytes,1,rep,name=contents,proto3" json:"contents,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *LangContents) Reset()         { *m = LangContents{} }
func (m *LangContents) String() string { return proto.CompactTextString(m) }
func (*LangContents) ProtoMessage()    {}
func (*LangContents) Descriptor() ([]byte, []int) {
	return fileDescriptor_78e43d48a789d5e5, []int{11}
}

func (m *LangContents) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LangContents.Unmarshal(m, b)
}
func (m *LangContents) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LangContents.Marshal(b, m, deterministic)
}
func (m *LangContents) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LangContents.Merge(m, src)
}
func (m *LangContents) XXX_Size() int {
	return xxx_messageInfo_LangContents.Size(m)
}
func (m *LangContents) XXX_DiscardUnknown() {
	xxx_messageInfo_LangContents.DiscardUnknown(m)
}

var xxx_messageInfo_LangContents proto.InternalMessageInfo

func (m *LangContents) GetContents() map[int32]string {
	if m != nil {
		return m.Contents
	}
	return nil
}

//游戏内文本内容
type Content struct {
	Code                 EStateCode              `protobuf:"varint,1,opt,name=code,proto3,enum=sdk.protos.EStateCode" json:"code,omitempty"`
	GameId               int32                   `protobuf:"varint,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	LangContentsMap      map[int32]*LangContents `protobuf:"bytes,3,rep,name=lang_contents_map,json=langContentsMap,proto3" json:"lang_contents_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Content) Reset()         { *m = Content{} }
func (m *Content) String() string { return proto.CompactTextString(m) }
func (*Content) ProtoMessage()    {}
func (*Content) Descriptor() ([]byte, []int) {
	return fileDescriptor_78e43d48a789d5e5, []int{12}
}

func (m *Content) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Content.Unmarshal(m, b)
}
func (m *Content) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Content.Marshal(b, m, deterministic)
}
func (m *Content) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Content.Merge(m, src)
}
func (m *Content) XXX_Size() int {
	return xxx_messageInfo_Content.Size(m)
}
func (m *Content) XXX_DiscardUnknown() {
	xxx_messageInfo_Content.DiscardUnknown(m)
}

var xxx_messageInfo_Content proto.InternalMessageInfo

func (m *Content) GetCode() EStateCode {
	if m != nil {
		return m.Code
	}
	return EStateCode_CODE_DEFAULT
}

func (m *Content) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *Content) GetLangContentsMap() map[int32]*LangContents {
	if m != nil {
		return m.LangContentsMap
	}
	return nil
}

//公告
type Notice struct {
	Title                string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Content              string   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Notice) Reset()         { *m = Notice{} }
func (m *Notice) String() string { return proto.CompactTextString(m) }
func (*Notice) ProtoMessage()    {}
func (*Notice) Descriptor() ([]byte, []int) {
	return fileDescriptor_78e43d48a789d5e5, []int{13}
}

func (m *Notice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Notice.Unmarshal(m, b)
}
func (m *Notice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Notice.Marshal(b, m, deterministic)
}
func (m *Notice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Notice.Merge(m, src)
}
func (m *Notice) XXX_Size() int {
	return xxx_messageInfo_Notice.Size(m)
}
func (m *Notice) XXX_DiscardUnknown() {
	xxx_messageInfo_Notice.DiscardUnknown(m)
}

var xxx_messageInfo_Notice proto.InternalMessageInfo

func (m *Notice) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Notice) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type NoticeList struct {
	Code                 EStateCode `protobuf:"varint,1,opt,name=code,proto3,enum=sdk.protos.EStateCode" json:"code,omitempty"`
	GameId               int32      `protobuf:"varint,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Lang                 Lang       `protobuf:"varint,3,opt,name=lang,proto3,enum=sdk.protos.Lang" json:"lang,omitempty"`
	Notices              []*Notice  `protobuf:"bytes,4,rep,name=notices,proto3" json:"notices,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *NoticeList) Reset()         { *m = NoticeList{} }
func (m *NoticeList) String() string { return proto.CompactTextString(m) }
func (*NoticeList) ProtoMessage()    {}
func (*NoticeList) Descriptor() ([]byte, []int) {
	return fileDescriptor_78e43d48a789d5e5, []int{14}
}

func (m *NoticeList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NoticeList.Unmarshal(m, b)
}
func (m *NoticeList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NoticeList.Marshal(b, m, deterministic)
}
func (m *NoticeList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NoticeList.Merge(m, src)
}
func (m *NoticeList) XXX_Size() int {
	return xxx_messageInfo_NoticeList.Size(m)
}
func (m *NoticeList) XXX_DiscardUnknown() {
	xxx_messageInfo_NoticeList.DiscardUnknown(m)
}

var xxx_messageInfo_NoticeList proto.InternalMessageInfo

func (m *NoticeList) GetCode() EStateCode {
	if m != nil {
		return m.Code
	}
	return EStateCode_CODE_DEFAULT
}

func (m *NoticeList) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *NoticeList) GetLang() Lang {
	if m != nil {
		return m.Lang
	}
	return Lang_CN
}

func (m *NoticeList) GetNotices() []*Notice {
	if m != nil {
		return m.Notices
	}
	return nil
}

// 渠道信息
type PBChannel struct {
	ChannelId            uint32   `protobuf:"varint,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	AppUrl               string   `protobuf:"bytes,2,opt,name=app_url,json=appUrl,proto3" json:"app_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PBChannel) Reset()         { *m = PBChannel{} }
func (m *PBChannel) String() string { return proto.CompactTextString(m) }
func (*PBChannel) ProtoMessage()    {}
func (*PBChannel) Descriptor() ([]byte, []int) {
	return fileDescriptor_78e43d48a789d5e5, []int{15}
}

func (m *PBChannel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBChannel.Unmarshal(m, b)
}
func (m *PBChannel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBChannel.Marshal(b, m, deterministic)
}
func (m *PBChannel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBChannel.Merge(m, src)
}
func (m *PBChannel) XXX_Size() int {
	return xxx_messageInfo_PBChannel.Size(m)
}
func (m *PBChannel) XXX_DiscardUnknown() {
	xxx_messageInfo_PBChannel.DiscardUnknown(m)
}

var xxx_messageInfo_PBChannel proto.InternalMessageInfo

func (m *PBChannel) GetChannelId() uint32 {
	if m != nil {
		return m.ChannelId
	}
	return 0
}

func (m *PBChannel) GetAppUrl() string {
	if m != nil {
		return m.AppUrl
	}
	return ""
}

type Sns struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Enable               bool     `protobuf:"varint,3,opt,name=enable,proto3" json:"enable,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sns) Reset()         { *m = Sns{} }
func (m *Sns) String() string { return proto.CompactTextString(m) }
func (*Sns) ProtoMessage()    {}
func (*Sns) Descriptor() ([]byte, []int) {
	return fileDescriptor_78e43d48a789d5e5, []int{16}
}

func (m *Sns) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sns.Unmarshal(m, b)
}
func (m *Sns) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sns.Marshal(b, m, deterministic)
}
func (m *Sns) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sns.Merge(m, src)
}
func (m *Sns) XXX_Size() int {
	return xxx_messageInfo_Sns.Size(m)
}
func (m *Sns) XXX_DiscardUnknown() {
	xxx_messageInfo_Sns.DiscardUnknown(m)
}

var xxx_messageInfo_Sns proto.InternalMessageInfo

func (m *Sns) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Sns) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Sns) GetEnable() bool {
	if m != nil {
		return m.Enable
	}
	return false
}

//系统配置
type GlobalInitData struct {
	Code                  EStateCode `protobuf:"varint,1,opt,name=code,proto3,enum=sdk.protos.EStateCode" json:"code,omitempty"`
	GameId                int32      `protobuf:"varint,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	ChannelId             int32      `protobuf:"varint,3,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Snses                 []*Sns     `protobuf:"bytes,4,rep,name=snses,proto3" json:"snses,omitempty"`
	GuestEnable           bool       `protobuf:"varint,5,opt,name=guest_enable,json=guestEnable,proto3" json:"guest_enable,omitempty"`
	EmailEnable           bool       `protobuf:"varint,6,opt,name=email_enable,json=emailEnable,proto3" json:"email_enable,omitempty"`
	ChannelRechargeEnable bool       `protobuf:"varint,7,opt,name=channel_recharge_enable,json=channelRechargeEnable,proto3" json:"channel_recharge_enable,omitempty"`
	RegEnable             bool       `protobuf:"varint,8,opt,name=reg_enable,json=regEnable,proto3" json:"reg_enable,omitempty"`
	GiftCodeEnable        bool       `protobuf:"varint,9,opt,name=gift_code_enable,json=giftCodeEnable,proto3" json:"gift_code_enable,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}   `json:"-"`
	XXX_unrecognized      []byte     `json:"-"`
	XXX_sizecache         int32      `json:"-"`
}

func (m *GlobalInitData) Reset()         { *m = GlobalInitData{} }
func (m *GlobalInitData) String() string { return proto.CompactTextString(m) }
func (*GlobalInitData) ProtoMessage()    {}
func (*GlobalInitData) Descriptor() ([]byte, []int) {
	return fileDescriptor_78e43d48a789d5e5, []int{17}
}

func (m *GlobalInitData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GlobalInitData.Unmarshal(m, b)
}
func (m *GlobalInitData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GlobalInitData.Marshal(b, m, deterministic)
}
func (m *GlobalInitData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GlobalInitData.Merge(m, src)
}
func (m *GlobalInitData) XXX_Size() int {
	return xxx_messageInfo_GlobalInitData.Size(m)
}
func (m *GlobalInitData) XXX_DiscardUnknown() {
	xxx_messageInfo_GlobalInitData.DiscardUnknown(m)
}

var xxx_messageInfo_GlobalInitData proto.InternalMessageInfo

func (m *GlobalInitData) GetCode() EStateCode {
	if m != nil {
		return m.Code
	}
	return EStateCode_CODE_DEFAULT
}

func (m *GlobalInitData) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *GlobalInitData) GetChannelId() int32 {
	if m != nil {
		return m.ChannelId
	}
	return 0
}

func (m *GlobalInitData) GetSnses() []*Sns {
	if m != nil {
		return m.Snses
	}
	return nil
}

func (m *GlobalInitData) GetGuestEnable() bool {
	if m != nil {
		return m.GuestEnable
	}
	return false
}

func (m *GlobalInitData) GetEmailEnable() bool {
	if m != nil {
		return m.EmailEnable
	}
	return false
}

func (m *GlobalInitData) GetChannelRechargeEnable() bool {
	if m != nil {
		return m.ChannelRechargeEnable
	}
	return false
}

func (m *GlobalInitData) GetRegEnable() bool {
	if m != nil {
		return m.RegEnable
	}
	return false
}

func (m *GlobalInitData) GetGiftCodeEnable() bool {
	if m != nil {
		return m.GiftCodeEnable
	}
	return false
}

//激活码登录
type ActiveCodeLogin struct {
	Code                 EStateCode `protobuf:"varint,1,opt,name=code,proto3,enum=sdk.protos.EStateCode" json:"code,omitempty"`
	ActiveCode           string     `protobuf:"bytes,2,opt,name=active_code,json=activeCode,proto3" json:"active_code,omitempty"`
	AccountId            int64      `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	ChannelId            int32      `protobuf:"varint,4,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	AccessToken          string     `protobuf:"bytes,5,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	TokenExpiredSeconds  int32      `protobuf:"varint,6,opt,name=token_expired_seconds,json=tokenExpiredSeconds,proto3" json:"token_expired_seconds,omitempty"`
	GameId               int32      `protobuf:"varint,7,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	RegionId             string     `protobuf:"bytes,8,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
	IsWhite              int32      `protobuf:"varint,9,opt,name=is_white,json=isWhite,proto3" json:"is_white,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ActiveCodeLogin) Reset()         { *m = ActiveCodeLogin{} }
func (m *ActiveCodeLogin) String() string { return proto.CompactTextString(m) }
func (*ActiveCodeLogin) ProtoMessage()    {}
func (*ActiveCodeLogin) Descriptor() ([]byte, []int) {
	return fileDescriptor_78e43d48a789d5e5, []int{18}
}

func (m *ActiveCodeLogin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActiveCodeLogin.Unmarshal(m, b)
}
func (m *ActiveCodeLogin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActiveCodeLogin.Marshal(b, m, deterministic)
}
func (m *ActiveCodeLogin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActiveCodeLogin.Merge(m, src)
}
func (m *ActiveCodeLogin) XXX_Size() int {
	return xxx_messageInfo_ActiveCodeLogin.Size(m)
}
func (m *ActiveCodeLogin) XXX_DiscardUnknown() {
	xxx_messageInfo_ActiveCodeLogin.DiscardUnknown(m)
}

var xxx_messageInfo_ActiveCodeLogin proto.InternalMessageInfo

func (m *ActiveCodeLogin) GetCode() EStateCode {
	if m != nil {
		return m.Code
	}
	return EStateCode_CODE_DEFAULT
}

func (m *ActiveCodeLogin) GetActiveCode() string {
	if m != nil {
		return m.ActiveCode
	}
	return ""
}

func (m *ActiveCodeLogin) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *ActiveCodeLogin) GetChannelId() int32 {
	if m != nil {
		return m.ChannelId
	}
	return 0
}

func (m *ActiveCodeLogin) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *ActiveCodeLogin) GetTokenExpiredSeconds() int32 {
	if m != nil {
		return m.TokenExpiredSeconds
	}
	return 0
}

func (m *ActiveCodeLogin) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *ActiveCodeLogin) GetRegionId() string {
	if m != nil {
		return m.RegionId
	}
	return ""
}

func (m *ActiveCodeLogin) GetIsWhite() int32 {
	if m != nil {
		return m.IsWhite
	}
	return 0
}

//敏感词替换
type WordCheck struct {
	Code                 EStateCode `protobuf:"varint,1,opt,name=code,proto3,enum=sdk.protos.EStateCode" json:"code,omitempty"`
	Word                 string     `protobuf:"bytes,2,opt,name=word,proto3" json:"word,omitempty"`
	ReplaceText          string     `protobuf:"bytes,3,opt,name=replace_text,json=replaceText,proto3" json:"replace_text,omitempty"`
	HasSensitiveWord     bool       `protobuf:"varint,4,opt,name=has_sensitive_word,json=hasSensitiveWord,proto3" json:"has_sensitive_word,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *WordCheck) Reset()         { *m = WordCheck{} }
func (m *WordCheck) String() string { return proto.CompactTextString(m) }
func (*WordCheck) ProtoMessage()    {}
func (*WordCheck) Descriptor() ([]byte, []int) {
	return fileDescriptor_78e43d48a789d5e5, []int{19}
}

func (m *WordCheck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WordCheck.Unmarshal(m, b)
}
func (m *WordCheck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WordCheck.Marshal(b, m, deterministic)
}
func (m *WordCheck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WordCheck.Merge(m, src)
}
func (m *WordCheck) XXX_Size() int {
	return xxx_messageInfo_WordCheck.Size(m)
}
func (m *WordCheck) XXX_DiscardUnknown() {
	xxx_messageInfo_WordCheck.DiscardUnknown(m)
}

var xxx_messageInfo_WordCheck proto.InternalMessageInfo

func (m *WordCheck) GetCode() EStateCode {
	if m != nil {
		return m.Code
	}
	return EStateCode_CODE_DEFAULT
}

func (m *WordCheck) GetWord() string {
	if m != nil {
		return m.Word
	}
	return ""
}

func (m *WordCheck) GetReplaceText() string {
	if m != nil {
		return m.ReplaceText
	}
	return ""
}

func (m *WordCheck) GetHasSensitiveWord() bool {
	if m != nil {
		return m.HasSensitiveWord
	}
	return false
}

//PS账号登录
type PSLogin struct {
	Code                 EStateCode    `protobuf:"varint,1,opt,name=code,proto3,enum=sdk.protos.EStateCode" json:"code,omitempty"`
	AccountId            int64         `protobuf:"varint,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	PsUserId             int64         `protobuf:"varint,3,opt,name=ps_user_id,json=psUserId,proto3" json:"ps_user_id,omitempty"`
	GameId               int32         `protobuf:"varint,4,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Status               PSLoginStatus `protobuf:"varint,5,opt,name=status,proto3,enum=sdk.protos.PSLoginStatus" json:"status,omitempty"`
	SkippingBindEmail    bool          `protobuf:"varint,6,opt,name=skipping_bind_email,json=skippingBindEmail,proto3" json:"skipping_bind_email,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *PSLogin) Reset()         { *m = PSLogin{} }
func (m *PSLogin) String() string { return proto.CompactTextString(m) }
func (*PSLogin) ProtoMessage()    {}
func (*PSLogin) Descriptor() ([]byte, []int) {
	return fileDescriptor_78e43d48a789d5e5, []int{20}
}

func (m *PSLogin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PSLogin.Unmarshal(m, b)
}
func (m *PSLogin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PSLogin.Marshal(b, m, deterministic)
}
func (m *PSLogin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PSLogin.Merge(m, src)
}
func (m *PSLogin) XXX_Size() int {
	return xxx_messageInfo_PSLogin.Size(m)
}
func (m *PSLogin) XXX_DiscardUnknown() {
	xxx_messageInfo_PSLogin.DiscardUnknown(m)
}

var xxx_messageInfo_PSLogin proto.InternalMessageInfo

func (m *PSLogin) GetCode() EStateCode {
	if m != nil {
		return m.Code
	}
	return EStateCode_CODE_DEFAULT
}

func (m *PSLogin) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *PSLogin) GetPsUserId() int64 {
	if m != nil {
		return m.PsUserId
	}
	return 0
}

func (m *PSLogin) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *PSLogin) GetStatus() PSLoginStatus {
	if m != nil {
		return m.Status
	}
	return PSLoginStatus_REG_SUCCESS
}

func (m *PSLogin) GetSkippingBindEmail() bool {
	if m != nil {
		return m.SkippingBindEmail
	}
	return false
}

func init() {
	proto.RegisterEnum("sdk.protos.EStateCode", EStateCode_name, EStateCode_value)
	proto.RegisterEnum("sdk.protos.Lang", Lang_name, Lang_value)
	proto.RegisterEnum("sdk.protos.ContentId", ContentId_name, ContentId_value)
	proto.RegisterEnum("sdk.protos.ServerStatus", ServerStatus_name, ServerStatus_value)
	proto.RegisterEnum("sdk.protos.PayPlatform", PayPlatform_name, PayPlatform_value)
	proto.RegisterEnum("sdk.protos.LoginType", LoginType_name, LoginType_value)
	proto.RegisterEnum("sdk.protos.PSLoginStatus", PSLoginStatus_name, PSLoginStatus_value)
	proto.RegisterType((*HaiwaiSdkLogin)(nil), "sdk.protos.HaiwaiSdkLogin")
	proto.RegisterType((*Vistor)(nil), "sdk.protos.Vistor")
	proto.RegisterType((*EmailUser)(nil), "sdk.protos.EmailUser")
	proto.RegisterType((*LoginResponse)(nil), "sdk.protos.LoginResponse")
	proto.RegisterType((*CreateRechargeOrder)(nil), "sdk.protos.CreateRechargeOrder")
	proto.RegisterType((*VerifyReceipt)(nil), "sdk.protos.VerifyReceipt")
	proto.RegisterType((*RechargeNotify)(nil), "sdk.protos.RechargeNotify")
	proto.RegisterType((*BindSdkList)(nil), "sdk.protos.BindSdkList")
	proto.RegisterType((*UnbindSdkLogin)(nil), "sdk.protos.UnbindSdkLogin")
	proto.RegisterType((*Server)(nil), "sdk.protos.Server")
	proto.RegisterType((*ServerList)(nil), "sdk.protos.ServerList")
	proto.RegisterType((*LangContents)(nil), "sdk.protos.LangContents")
	proto.RegisterMapType((map[int32]string)(nil), "sdk.protos.LangContents.ContentsEntry")
	proto.RegisterType((*Content)(nil), "sdk.protos.Content")
	proto.RegisterMapType((map[int32]*LangContents)(nil), "sdk.protos.Content.LangContentsMapEntry")
	proto.RegisterType((*Notice)(nil), "sdk.protos.Notice")
	proto.RegisterType((*NoticeList)(nil), "sdk.protos.NoticeList")
	proto.RegisterType((*PBChannel)(nil), "sdk.protos.PBChannel")
	proto.RegisterType((*Sns)(nil), "sdk.protos.Sns")
	proto.RegisterType((*GlobalInitData)(nil), "sdk.protos.GlobalInitData")
	proto.RegisterType((*ActiveCodeLogin)(nil), "sdk.protos.ActiveCodeLogin")
	proto.RegisterType((*WordCheck)(nil), "sdk.protos.WordCheck")
	proto.RegisterType((*PSLogin)(nil), "sdk.protos.PSLogin")
}

func init() { proto.RegisterFile("SdkMessage.proto", fileDescriptor_78e43d48a789d5e5) }

var fileDescriptor_78e43d48a789d5e5 = []byte{
	// 3162 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x59, 0xcd, 0x73, 0xdb, 0x46,
	0x96, 0x37, 0xf8, 0xcd, 0x47, 0x8a, 0x6a, 0xb7, 0x2d, 0x8b, 0xb2, 0xe3, 0x44, 0x66, 0xec, 0x44,
	0xab, 0x4a, 0xa9, 0x2a, 0xda, 0x8f, 0xca, 0x66, 0x4f, 0x10, 0x09, 0x49, 0x58, 0x93, 0x00, 0x03,
	0x80, 0x72, 0x54, 0xb5, 0x5b, 0x28, 0x98, 0x80, 0x28, 0x2c, 0x29, 0x00, 0x0b, 0x80, 0xb6, 0xb5,
	0xdf, 0x9b, 0xfd, 0xfe, 0xcc, 0x7e, 0x6f, 0x66, 0x92, 0xeb, 0xcc, 0x61, 0xe6, 0xdf, 0xc8, 0x61,
	0xe6, 0x30, 0xb7, 0xf9, 0x0b, 0x72, 0x9b, 0xcb, 0x9c, 0xe7, 0x36, 0x53, 0xfd, 0x01, 0x10, 0xa0,
	0x2d, 0x39, 0x4a, 0x29, 0x35, 0xba, 0x10, 0xfd, 0x7b, 0xaf, 0xbb, 0x5f, 0xbf, 0xf7, 0x7b, 0xdd,
	0xaf, 0x5b, 0x80, 0x74, 0x7b, 0x3a, 0x70, 0xa2, 0xc8, 0x9a, 0x38, 0x3b, 0x41, 0xe8, 0xc7, 0x3e,
	0x86, 0xc8, 0x9e, 0xb2, 0xcf, 0xa8, 0xf3, 0x65, 0x09, 0x5a, 0x87, 0x96, 0xfb, 0xdc, 0x72, 0x75,
	0x7b, 0xda, 0xf7, 0x27, 0xae, 0x87, 0xb7, 0xa1, 0x34, 0xf6, 0x6d, 0xa7, 0x2d, 0x6c, 0x0a, 0x5b,
	0xad, 0xdd, 0x3b, 0x3b, 0x0b, 0xed, 0x1d, 0x49, 0x8f, 0xad, 0xd8, 0xe9, 0xfa, 0xb6, 0xa3, 0x51,
	0x1d, 0x7c, 0x1f, 0xc0, 0x1a, 0x8f, 0xfd, 0xb9, 0x17, 0x9b, 0xae, 0xdd, 0x2e, 0x6c, 0x0a, 0x5b,
	0x45, 0xad, 0xce, 0x11, 0xd9, 0x26, 0xe2, 0xf1, 0xa9, 0xe5, 0x79, 0xce, 0x8c, 0x88, 0x8b, 0x9b,
	0xc2, 0x56, 0x59, 0xab, 0x73, 0x44, 0xb6, 0xf1, 0x1a, 0x54, 0x22, 0x7b, 0x4a, 0x44, 0x25, 0x2a,
	0x2a, 0x47, 0xf6, 0x54, 0xb6, 0xf1, 0x9b, 0xd0, 0x20, 0xf0, 0x3c, 0x72, 0x42, 0x22, 0x2b, 0x6f,
	0x0a, 0x5b, 0x75, 0xad, 0x1e, 0xd9, 0xd3, 0x51, 0xe4, 0x84, 0xb2, 0x8d, 0x3b, 0xb0, 0x92, 0xca,
	0x3d, 0xeb, 0xcc, 0x69, 0x57, 0xa8, 0x46, 0x83, 0x6b, 0x28, 0xd6, 0x99, 0x83, 0x1f, 0x40, 0xd3,
	0x1a, 0x8f, 0x9d, 0x28, 0x32, 0x63, 0x7f, 0xea, 0x78, 0xed, 0x2a, 0x53, 0x61, 0x98, 0x41, 0x20,
	0x7c, 0x0f, 0xea, 0xb6, 0xf3, 0xcc, 0x1d, 0x3b, 0x64, 0x92, 0x1a, 0x95, 0xd7, 0x18, 0x20, 0xdb,
	0x78, 0x03, 0x6a, 0x6e, 0x64, 0x3e, 0x3f, 0x75, 0x63, 0xa7, 0x5d, 0xa7, 0xc6, 0x55, 0xdd, 0xe8,
	0x09, 0x69, 0xe2, 0x75, 0xa8, 0x4e, 0xac, 0x33, 0xda, 0x0b, 0xa8, 0xa4, 0x42, 0x9a, 0xb2, 0x8d,
	0x77, 0x61, 0x8d, 0x4e, 0x66, 0x3a, 0x2f, 0x02, 0x37, 0x74, 0x6c, 0x33, 0x72, 0xc6, 0xbe, 0x67,
	0x47, 0xed, 0x06, 0x55, 0xbb, 0x45, 0x85, 0x12, 0x93, 0xe9, 0x4c, 0x44, 0x5c, 0xe0, 0x46, 0xa6,
	0xe7, 0x3c, 0x6f, 0xaf, 0x6c, 0x0a, 0x5b, 0x35, 0xad, 0xec, 0x46, 0x8a, 0xf3, 0x9c, 0xd8, 0x16,
	0x3a, 0x13, 0xd7, 0xf7, 0xc8, 0x2c, 0x2d, 0x66, 0x1b, 0x03, 0x64, 0x9b, 0x08, 0x67, 0xfe, 0x78,
	0x6a, 0xc6, 0xee, 0x99, 0xd3, 0x5e, 0xa5, 0x3e, 0xaf, 0x11, 0xc0, 0x70, 0xcf, 0x1c, 0xfc, 0xbb,
	0xb0, 0x41, 0x9c, 0x33, 0x9e, 0x9f, 0xcd, 0x67, 0x56, 0xec, 0x3e, 0x73, 0x4c, 0xdb, 0x3a, 0x8f,
	0xcc, 0x19, 0x09, 0x6d, 0xfb, 0x26, 0x35, 0xe4, 0x4e, 0x64, 0x4f, 0xbb, 0xa9, 0xbc, 0x67, 0x9d,
	0x47, 0x2c, 0xf0, 0x49, 0x57, 0xdf, 0x8b, 0x5d, 0x6f, 0xee, 0xcf, 0xa3, 0x6c, 0x57, 0xbc, 0xe8,
	0x9a, 0xca, 0xd3, 0xae, 0x9d, 0xaf, 0x4a, 0x50, 0x39, 0x72, 0xa3, 0xd8, 0x0f, 0xaf, 0x44, 0x9f,
	0x2d, 0x40, 0xcf, 0x68, 0xaf, 0x4c, 0x30, 0x0b, 0x74, 0xb5, 0x2d, 0x86, 0xa7, 0xf1, 0x7c, 0x17,
	0x56, 0xb9, 0x66, 0x60, 0x45, 0xd1, 0x73, 0x3f, 0x64, 0x74, 0x4a, 0x15, 0x87, 0x1c, 0xcd, 0x47,
	0xb5, 0xb4, 0x14, 0xd5, 0x3c, 0x5d, 0xcb, 0x97, 0xd3, 0xb5, 0xb2, 0x4c, 0xd7, 0xaf, 0xc1, 0xa9,
	0x0b, 0x29, 0x50, 0xbb, 0x98, 0x02, 0x19, 0x3e, 0xd5, 0x73, 0x7c, 0xca, 0x91, 0x00, 0x96, 0x48,
	0x90, 0x25, 0x68, 0x23, 0x4f, 0xd0, 0x1c, 0x3f, 0x9a, 0x4b, 0xfc, 0x78, 0x07, 0x56, 0xa9, 0xaf,
	0x69, 0x54, 0x69, 0x80, 0x29, 0xf3, 0xca, 0xda, 0x0a, 0x81, 0x69, 0x34, 0x49, 0x58, 0x2f, 0xe7,
	0x51, 0xeb, 0x9b, 0xf3, 0x68, 0xf5, 0x32, 0x1e, 0x11, 0xd3, 0xdd, 0xc8, 0x7c, 0xea, 0x7a, 0xb6,
	0x63, 0xb7, 0x11, 0xcd, 0x88, 0x9a, 0x1b, 0xed, 0xd1, 0x76, 0xe7, 0xfb, 0x65, 0xa8, 0x4b, 0x67,
	0x96, 0x3b, 0x23, 0xac, 0xb8, 0x12, 0xcf, 0x6e, 0x43, 0xd9, 0x21, 0x1d, 0x39, 0xb9, 0x58, 0x83,
	0xb8, 0x82, 0x7e, 0x98, 0xd6, 0x3c, 0x3e, 0x35, 0xe9, 0x60, 0x6c, 0x8b, 0x5a, 0xa1, 0xb0, 0x38,
	0x8f, 0x4f, 0xc9, 0x18, 0xf8, 0x11, 0xb4, 0x98, 0x5e, 0x4a, 0x3d, 0xc6, 0x2b, 0xa6, 0x96, 0x32,
	0x2f, 0xcf, 0x9e, 0xf2, 0x32, 0x7b, 0x72, 0xc4, 0xac, 0x5c, 0x4a, 0xcc, 0xea, 0x32, 0x31, 0x1f,
	0x42, 0x2b, 0xb5, 0xd1, 0x8c, 0xcf, 0x03, 0x87, 0xf3, 0xa9, 0x69, 0x71, 0x1b, 0x8d, 0xf3, 0xe0,
	0xe5, 0x3d, 0xaf, 0x7e, 0x05, 0x7e, 0xc2, 0xc5, 0xfc, 0x7c, 0x08, 0xa5, 0x99, 0xe5, 0x4d, 0x28,
	0xcb, 0x5a, 0xbb, 0x28, 0xeb, 0xe8, 0xbe, 0xe5, 0x4d, 0x34, 0x2a, 0xcd, 0xb2, 0xb8, 0x79, 0x31,
	0x8b, 0x57, 0x2e, 0x61, 0x71, 0xeb, 0x12, 0x16, 0xaf, 0xbe, 0x9e, 0xc5, 0xe8, 0xca, 0x2c, 0xfe,
	0xd6, 0x76, 0xc3, 0x9f, 0x95, 0x60, 0x85, 0x7e, 0x69, 0x4e, 0x14, 0xf8, 0x5e, 0xe4, 0x5c, 0xe7,
	0x99, 0x9a, 0xf3, 0x67, 0x71, 0xc9, 0x9f, 0x97, 0xae, 0xb7, 0xf4, 0xcd, 0xd7, 0x5b, 0xbe, 0x34,
	0x6b, 0x97, 0x89, 0x57, 0xb9, 0x02, 0xf1, 0xaa, 0x17, 0x13, 0x2f, 0x4b, 0x8e, 0x5a, 0x9e, 0x1c,
	0x8b, 0x63, 0xb3, 0xbe, 0x74, 0x6c, 0x2e, 0x38, 0x03, 0x4b, 0x9c, 0xc9, 0xed, 0x2d, 0x8d, 0xfc,
	0xde, 0x42, 0x96, 0x60, 0xbb, 0x51, 0x30, 0xb3, 0xce, 0xd9, 0x29, 0xd4, 0x64, 0x4b, 0xe0, 0x18,
	0x3d, 0x82, 0x1e, 0x42, 0xcb, 0x8d, 0xcc, 0x13, 0x37, 0x8c, 0x62, 0xee, 0x15, 0x76, 0x64, 0x37,
	0xdd, 0x68, 0x9f, 0x80, 0xcc, 0x17, 0xf7, 0x01, 0x18, 0x29, 0xa9, 0x0d, 0xec, 0xe8, 0xae, 0x53,
	0x84, 0x1a, 0xf1, 0x5b, 0xa9, 0x98, 0x64, 0xf1, 0x2a, 0xa5, 0xc3, 0x5a, 0x2e, 0xa5, 0xa8, 0xea,
	0x79, 0xe0, 0x24, 0xbd, 0x48, 0x66, 0x6f, 0x00, 0x09, 0x31, 0x1b, 0x12, 0xd1, 0x21, 0xab, 0xa1,
	0x33, 0x21, 0x03, 0x76, 0x7e, 0x5a, 0x86, 0x5b, 0xdd, 0xd0, 0xb1, 0x62, 0x47, 0x73, 0xc6, 0xa7,
	0x56, 0x38, 0x71, 0xd4, 0xd0, 0xbe, 0xe2, 0xf6, 0x98, 0xc9, 0xdd, 0x42, 0x2e, 0x77, 0xf3, 0x54,
	0x2c, 0x2e, 0x53, 0x71, 0x1d, 0xaa, 0xa1, 0x3f, 0xcb, 0x9c, 0xb4, 0x15, 0xd2, 0x64, 0xfd, 0x82,
	0xd0, 0xb7, 0xe7, 0xe3, 0x38, 0x53, 0xc0, 0x71, 0x44, 0xb6, 0xf1, 0x1d, 0xa8, 0x58, 0x67, 0x64,
	0x0c, 0xca, 0x94, 0x82, 0xc6, 0x5b, 0x78, 0x13, 0x9a, 0xfe, 0x3c, 0x36, 0xe3, 0xd0, 0xb2, 0x1d,
	0xd3, 0xf3, 0xf9, 0x01, 0x0b, 0xfe, 0x3c, 0x36, 0x08, 0xa4, 0xf8, 0xb4, 0x67, 0x1c, 0x5b, 0xe3,
	0x53, 0x5e, 0xb0, 0xf1, 0x16, 0x99, 0x70, 0xe2, 0xfb, 0x76, 0xc4, 0x82, 0xc7, 0x36, 0xbe, 0x3a,
	0x45, 0x68, 0xe8, 0x36, 0xa1, 0x61, 0x3b, 0xd1, 0x38, 0x74, 0x83, 0xd8, 0xf5, 0x3d, 0x7e, 0x96,
	0x66, 0x21, 0x8c, 0xa1, 0x14, 0xb9, 0x13, 0x8f, 0xf2, 0xa2, 0xae, 0xd1, 0x6f, 0xdc, 0x82, 0x82,
	0x1b, 0x70, 0x26, 0x14, 0xdc, 0x80, 0x10, 0x28, 0x72, 0xc2, 0x67, 0xac, 0x2a, 0x65, 0x87, 0x66,
	0x8d, 0x01, 0xb2, 0x8d, 0x3f, 0x84, 0x66, 0x60, 0x9d, 0x9b, 0xc1, 0xcc, 0x8a, 0x4f, 0xfc, 0xf0,
	0x8c, 0x46, 0xbe, 0xb5, 0xbb, 0x9e, 0xf5, 0xfb, 0xd0, 0x3a, 0x1f, 0x72, 0xb1, 0xd6, 0x08, 0x16,
	0x0d, 0xfc, 0x36, 0xac, 0x8c, 0xe7, 0x61, 0xe8, 0x78, 0xe3, 0x73, 0x76, 0x0c, 0xad, 0xd2, 0x39,
	0x9b, 0x09, 0x48, 0x4f, 0xa1, 0x7b, 0x50, 0x5f, 0x9c, 0x53, 0x8c, 0x04, 0xb5, 0x64, 0xfb, 0x27,
	0x91, 0x88, 0x4e, 0xfd, 0x80, 0x18, 0xc6, 0x76, 0xb5, 0x0a, 0x69, 0xca, 0x36, 0x71, 0x29, 0x13,
	0xc4, 0xce, 0x19, 0x91, 0x62, 0x1a, 0x43, 0xa0, 0xd2, 0xd8, 0x39, 0x63, 0xb1, 0x62, 0x0e, 0xa7,
	0x8c, 0xbc, 0xc5, 0x5c, 0x47, 0x11, 0x4a, 0xbd, 0x77, 0x61, 0x35, 0x0e, 0x2d, 0x2f, 0xb2, 0xc6,
	0xc4, 0x4f, 0xe6, 0x3c, 0x9c, 0xb5, 0x6f, 0xb3, 0xc2, 0x2b, 0x03, 0x8f, 0xc2, 0x19, 0x7e, 0x1f,
	0xd6, 0x92, 0xc5, 0x9b, 0xb9, 0x28, 0xae, 0x51, 0x75, 0x9c, 0x08, 0xd5, 0x45, 0x34, 0x37, 0xa0,
	0x46, 0xeb, 0x7f, 0xef, 0xc4, 0x6f, 0xdf, 0x61, 0xb4, 0x26, 0x37, 0x00, 0xef, 0xc4, 0xef, 0xfc,
	0xa2, 0x00, 0x2b, 0x47, 0x4e, 0xe8, 0x9e, 0x9c, 0x6b, 0xce, 0xd8, 0x71, 0x83, 0xf8, 0xd7, 0x4b,
	0xe8, 0x65, 0x66, 0x96, 0x5f, 0x62, 0x66, 0x8e, 0x1c, 0x95, 0x25, 0x72, 0xb4, 0xa1, 0x1a, 0xb2,
	0x65, 0x70, 0x4e, 0x27, 0x4d, 0xfc, 0x1e, 0x60, 0xd7, 0x0a, 0xcc, 0xac, 0x8b, 0xd3, 0xdb, 0x08,
	0x72, 0xad, 0xc0, 0x58, 0x08, 0x58, 0x05, 0x1a, 0x58, 0xe3, 0xa9, 0x35, 0x71, 0xb2, 0x44, 0x6f,
	0x70, 0x8c, 0x52, 0x3d, 0x9f, 0x7a, 0xb0, 0x9c, 0x7a, 0x0f, 0x96, 0x68, 0xca, 0x4a, 0xc7, 0x2c,
	0x1b, 0x3b, 0x3f, 0x2e, 0x42, 0x2b, 0xd9, 0x4b, 0x14, 0x3f, 0x76, 0x4f, 0xce, 0x49, 0x76, 0xa4,
	0xbe, 0x2f, 0x7f, 0x5b, 0x3e, 0xde, 0x02, 0x14, 0xf2, 0x69, 0x53, 0xba, 0xb2, 0x73, 0xa7, 0x95,
	0xe0, 0x9c, 0xb2, 0xf9, 0xfd, 0xa3, 0x7c, 0x0d, 0xfb, 0x47, 0x92, 0xfe, 0xf5, 0x4c, 0xfa, 0xe7,
	0x22, 0x0a, 0x4b, 0x11, 0x45, 0x50, 0x8c, 0xe3, 0x80, 0xba, 0xaf, 0xa8, 0x91, 0xcf, 0x97, 0x93,
	0xb8, 0xf9, 0x8a, 0x24, 0x7e, 0x75, 0xb8, 0x57, 0x2e, 0x0b, 0xf7, 0xd2, 0x9e, 0x92, 0x0f, 0x16,
	0x71, 0x76, 0x14, 0x87, 0x26, 0x77, 0xc7, 0x2a, 0xbf, 0x2a, 0xc7, 0xa1, 0x48, 0x81, 0xce, 0xe7,
	0x02, 0x34, 0xc8, 0x09, 0x47, 0x2e, 0xf7, 0x6e, 0x14, 0x5f, 0x67, 0x1d, 0x42, 0x5c, 0x66, 0x4f,
	0xa3, 0x76, 0x71, 0xb3, 0x48, 0x38, 0x41, 0xbe, 0x17, 0x75, 0x76, 0x29, 0x5b, 0x67, 0x67, 0x98,
	0x52, 0xce, 0x32, 0xa5, 0xf3, 0x43, 0x01, 0x5a, 0x23, 0xef, 0x29, 0xb7, 0xef, 0xba, 0x1f, 0x1f,
	0x16, 0xaf, 0x0b, 0xc5, 0x4b, 0x5e, 0x17, 0x4a, 0xcb, 0xaf, 0x0b, 0x17, 0x5a, 0xfb, 0x45, 0x01,
	0x2a, 0x3a, 0x8d, 0x7f, 0x9e, 0x1a, 0xc2, 0x12, 0x35, 0xde, 0x82, 0x06, 0x17, 0x66, 0xee, 0xb3,
	0xc0, 0xa0, 0x24, 0x45, 0xdd, 0xc0, 0xb4, 0x6c, 0x3b, 0x74, 0xa2, 0x88, 0x97, 0x70, 0x75, 0x37,
	0x10, 0x19, 0x40, 0x8b, 0x18, 0xd7, 0x9b, 0x9a, 0x81, 0x1f, 0xc6, 0xbc, 0x66, 0xab, 0x11, 0x60,
	0xe8, 0x87, 0x31, 0x2d, 0x2f, 0x88, 0x90, 0x2e, 0x32, 0xb9, 0x64, 0x10, 0xa4, 0x4b, 0x33, 0x60,
	0x07, 0xca, 0x11, 0xf1, 0x12, 0x4d, 0x8c, 0xd6, 0x6e, 0x3b, 0xeb, 0x3f, 0x66, 0x3b, 0x71, 0xe2,
	0x3c, 0xd2, 0x98, 0x1a, 0xc9, 0x07, 0xdb, 0x3f, 0xb3, 0xdc, 0xe4, 0x32, 0xcb, 0x5b, 0x94, 0xde,
	0xd6, 0x84, 0x57, 0x5d, 0xe4, 0x93, 0xac, 0x6a, 0x3c, 0xf3, 0x23, 0xc7, 0x36, 0x63, 0xe7, 0x45,
	0xcc, 0x13, 0x05, 0x18, 0x64, 0x38, 0x2f, 0xe2, 0xce, 0x4f, 0x04, 0x00, 0x36, 0xc5, 0x95, 0x99,
	0x76, 0xe1, 0x56, 0xc2, 0xcd, 0x28, 0x2e, 0xcc, 0x78, 0x0f, 0xaa, 0xcc, 0x93, 0x51, 0xbb, 0xb4,
	0x59, 0xdc, 0x6a, 0xec, 0xe2, 0x97, 0x97, 0xa8, 0x25, 0x2a, 0xaf, 0xbb, 0xef, 0xe7, 0x4a, 0xe9,
	0x4a, 0xbe, 0x94, 0xee, 0x7c, 0x2a, 0x40, 0x93, 0xdc, 0x6f, 0x48, 0xc1, 0xeb, 0x78, 0x71, 0x84,
	0xf7, 0xa0, 0x36, 0xe6, 0xdf, 0x6d, 0x81, 0xce, 0xfd, 0xce, 0xf2, 0x5d, 0x28, 0xd1, 0xdd, 0x49,
	0x3e, 0x24, 0x2f, 0x0e, 0xcf, 0xb5, 0xb4, 0xdf, 0xdd, 0xdf, 0x83, 0x95, 0x9c, 0x88, 0xac, 0x70,
	0xea, 0x9c, 0x73, 0x0e, 0x91, 0x4f, 0x92, 0x43, 0xcf, 0xac, 0xd9, 0x3c, 0x21, 0x0e, 0x6b, 0x7c,
	0x58, 0xf8, 0x40, 0xe8, 0x7c, 0x52, 0x80, 0x2a, 0xef, 0x7d, 0x3d, 0xee, 0x35, 0xe0, 0x26, 0xb9,
	0xbb, 0x99, 0x89, 0x79, 0xe6, 0x99, 0x15, 0xd0, 0x7c, 0x6e, 0xec, 0x6e, 0x65, 0x47, 0xe4, 0x93,
	0xe6, 0x96, 0x38, 0xb0, 0x02, 0xb6, 0xb8, 0xd5, 0x59, 0x1e, 0xbd, 0xfb, 0x07, 0x70, 0xfb, 0x55,
	0x8a, 0xaf, 0x58, 0xea, 0x4e, 0x76, 0xa9, 0x8d, 0x3c, 0x5b, 0xb3, 0x43, 0x64, 0x9d, 0xf0, 0x01,
	0x54, 0xc8, 0xa1, 0x34, 0xa6, 0x97, 0xfa, 0xd8, 0x8d, 0x67, 0xcc, 0x07, 0x75, 0x8d, 0x35, 0xc8,
	0x51, 0xcb, 0x97, 0xc3, 0x1d, 0x98, 0x34, 0x3b, 0xdf, 0x13, 0x00, 0x58, 0xd7, 0xeb, 0x23, 0x68,
	0x72, 0x37, 0x2e, 0x5e, 0x7a, 0x37, 0x7e, 0x0f, 0xaa, 0x1e, 0x9d, 0xf8, 0x95, 0xa4, 0x65, 0x36,
	0x69, 0x89, 0x4a, 0xa7, 0x0b, 0xf5, 0xe1, 0x5e, 0x97, 0xbd, 0x1b, 0x2c, 0x3d, 0x2a, 0x10, 0x5b,
	0x57, 0xb2, 0x8f, 0x0a, 0xeb, 0x50, 0xb5, 0x82, 0x80, 0x56, 0x65, 0x05, 0x7e, 0xa0, 0x05, 0xc1,
	0x28, 0x9c, 0x75, 0x44, 0x28, 0xea, 0x5e, 0x44, 0x4b, 0xd8, 0x64, 0x87, 0x2a, 0xb8, 0x74, 0xd3,
	0xce, 0x6c, 0x4a, 0xf4, 0x9b, 0xec, 0x01, 0x8e, 0x67, 0x3d, 0x9d, 0xb1, 0xd7, 0x8f, 0x9a, 0xc6,
	0x5b, 0x9d, 0xaf, 0x0a, 0xd0, 0x3a, 0x98, 0xf9, 0x4f, 0xad, 0x99, 0xec, 0xb9, 0x71, 0xcf, 0x8a,
	0xad, 0x6b, 0xab, 0xc1, 0x2e, 0x7b, 0x14, 0x7e, 0x04, 0xe5, 0xc8, 0x8b, 0x52, 0x57, 0xad, 0xe6,
	0xf2, 0xdb, 0x23, 0x3b, 0x17, 0x91, 0x92, 0xb3, 0x71, 0x32, 0x77, 0xa2, 0xd8, 0xe4, 0xb6, 0x97,
	0xa9, 0xed, 0x0d, 0x8a, 0x49, 0x14, 0x22, 0x2a, 0xec, 0xdd, 0x86, 0xab, 0x54, 0x98, 0x0a, 0xc5,
	0xb8, 0xca, 0xef, 0xc0, 0x7a, 0x62, 0x4b, 0x5a, 0x7b, 0x70, 0xed, 0x2a, 0xd5, 0x5e, 0xe3, 0xe2,
	0xa4, 0x20, 0xe2, 0xfd, 0xee, 0x03, 0x90, 0x0b, 0x19, 0x57, 0xad, 0x51, 0x55, 0xb2, 0x97, 0x70,
	0xf1, 0x16, 0xa0, 0x89, 0x7b, 0x12, 0xb3, 0xf7, 0x1a, 0xae, 0xc4, 0x2e, 0xaa, 0x2d, 0x82, 0x13,
	0x2f, 0x31, 0xcd, 0xce, 0x97, 0x05, 0x58, 0x15, 0xc7, 0xe4, 0x26, 0x4e, 0xc0, 0xab, 0x9f, 0x81,
	0x6f, 0x41, 0xc3, 0xa2, 0xdd, 0x59, 0xcd, 0xc1, 0x0f, 0x1b, 0x2b, 0x1d, 0xf1, 0x75, 0xd5, 0x58,
	0x3e, 0x18, 0xa5, 0xd7, 0x3d, 0x79, 0x96, 0xaf, 0x70, 0xb3, 0xaf, 0x7c, 0xad, 0x27, 0xcf, 0xea,
	0xc5, 0x8f, 0x45, 0xb5, 0x4b, 0x1e, 0x8b, 0xf2, 0x6f, 0xf2, 0x9d, 0x2f, 0x04, 0xa8, 0x3f, 0xf1,
	0x43, 0xbb, 0x7b, 0xea, 0x8c, 0xa7, 0x57, 0x72, 0x20, 0x86, 0x12, 0x7d, 0xd2, 0xe3, 0x19, 0x41,
	0x5f, 0xf2, 0x1e, 0x40, 0x33, 0x74, 0x82, 0x99, 0x35, 0x76, 0xd8, 0x61, 0xc7, 0x8e, 0xe8, 0x06,
	0xc7, 0xc8, 0x69, 0x47, 0x0a, 0xb9, 0x53, 0x2b, 0x32, 0x23, 0xc7, 0x8b, 0x5c, 0xea, 0xfe, 0xf4,
	0x5d, 0xb0, 0xa6, 0xa1, 0x53, 0x2b, 0xd2, 0x13, 0x01, 0xb1, 0xaa, 0xf3, 0x73, 0x01, 0xaa, 0x43,
	0xfd, 0xda, 0x2b, 0x9c, 0x37, 0x00, 0x82, 0x28, 0xad, 0x64, 0x58, 0x6c, 0x6b, 0x41, 0xf4, 0x72,
	0x21, 0x53, 0xca, 0x39, 0xf9, 0x7d, 0xa8, 0x44, 0xb4, 0x0a, 0xa0, 0xe1, 0x6c, 0xed, 0x6e, 0xe4,
	0x2e, 0xa9, 0xcc, 0x4c, 0x5e, 0x26, 0x70, 0x45, 0xbc, 0x03, 0xb7, 0xa2, 0xa9, 0x1b, 0x04, 0xae,
	0x37, 0xa1, 0x2f, 0x28, 0x26, 0x2b, 0xf3, 0x58, 0x46, 0xdd, 0x4c, 0x44, 0xa4, 0xd2, 0xa4, 0x0f,
	0xb4, 0xdb, 0x9f, 0x35, 0x01, 0x16, 0xab, 0xc1, 0x08, 0x9a, 0x5d, 0xb5, 0x27, 0x99, 0x3d, 0x69,
	0x5f, 0x1c, 0xf5, 0x0d, 0x74, 0x03, 0xdf, 0xe4, 0x88, 0x3e, 0xea, 0x76, 0x25, 0x5d, 0x47, 0x3f,
	0x12, 0x30, 0x86, 0x16, 0x85, 0x0e, 0xc4, 0x81, 0x64, 0x2a, 0xaa, 0x22, 0x21, 0x52, 0xc3, 0xdd,
	0xa4, 0x58, 0xf7, 0x50, 0x54, 0x14, 0xa9, 0xcf, 0x60, 0xb2, 0xc9, 0xdf, 0xa6, 0xb0, 0x34, 0x10,
	0x65, 0x02, 0x1a, 0xa6, 0xf4, 0xb1, 0xac, 0x1b, 0xe8, 0x24, 0x95, 0xe8, 0xbd, 0xc7, 0xa6, 0x38,
	0x32, 0x0e, 0xcd, 0x7d, 0x51, 0xee, 0x4b, 0x3d, 0x34, 0xc1, 0xb7, 0x01, 0x51, 0x49, 0x16, 0x3d,
	0x4d, 0x27, 0x1d, 0xe9, 0x92, 0xc6, 0x46, 0x77, 0xf1, 0x1d, 0xc0, 0x14, 0x3b, 0x92, 0x34, 0x79,
	0xff, 0x38, 0xd1, 0xfd, 0xa3, 0x74, 0x04, 0x43, 0x7d, 0x2c, 0x29, 0xa6, 0xa4, 0x69, 0xaa, 0x86,
	0xa6, 0x29, 0x3a, 0x50, 0x15, 0xe9, 0x98, 0xa3, 0xb3, 0x14, 0x55, 0xb5, 0x9e, 0xa4, 0x71, 0xf4,
	0x0c, 0xdf, 0x82, 0x55, 0x66, 0x9d, 0x7c, 0x90, 0x0c, 0xe0, 0xa5, 0xe0, 0x50, 0x3c, 0x36, 0xbb,
	0x7d, 0x55, 0x97, 0x7a, 0xc8, 0xc7, 0x77, 0xe1, 0xce, 0xd2, 0xc2, 0x0d, 0x73, 0x20, 0x1a, 0xdd,
	0x43, 0x14, 0xe0, 0x75, 0xb8, 0xc5, 0xbd, 0x79, 0x24, 0x77, 0x25, 0x53, 0xee, 0x31, 0xc3, 0xff,
	0x18, 0xdf, 0x83, 0x75, 0x3e, 0x92, 0xae, 0x3f, 0x51, 0xb5, 0x9e, 0x69, 0xa8, 0xaa, 0xa9, 0x1f,
	0xaa, 0x9a, 0x81, 0x42, 0xbc, 0x01, 0x6b, 0x54, 0x28, 0x2b, 0x47, 0x62, 0x5f, 0xee, 0xa5, 0x4a,
	0x28, 0xca, 0x58, 0xa0, 0x89, 0x03, 0x73, 0x20, 0xeb, 0x3a, 0x8a, 0xd3, 0x15, 0x48, 0x9a, 0x66,
	0x76, 0x87, 0x66, 0x57, 0x55, 0x14, 0x34, 0x4f, 0xe7, 0xe6, 0xa8, 0x26, 0x7d, 0x34, 0x92, 0x74,
	0x03, 0x3d, 0x5b, 0x56, 0x27, 0x5e, 0x46, 0xcf, 0xf1, 0x9b, 0x70, 0x37, 0xeb, 0x4a, 0xfa, 0xbd,
	0x58, 0xca, 0x8b, 0x45, 0x20, 0x35, 0xcd, 0x14, 0xbb, 0x86, 0x7c, 0x24, 0x51, 0x1d, 0x74, 0x9e,
	0x9a, 0x9b, 0x41, 0x49, 0x90, 0x7a, 0xe8, 0x4f, 0x72, 0x36, 0x48, 0x1f, 0x1b, 0xe6, 0xbe, 0xaa,
	0x0d, 0x44, 0x03, 0xfd, 0x69, 0xca, 0x16, 0x22, 0xd0, 0x25, 0xa5, 0x67, 0xea, 0x03, 0x1d, 0xfd,
	0x59, 0x1a, 0xcf, 0xe1, 0xa1, 0xaa, 0x24, 0x03, 0xf6, 0xd0, 0x9f, 0xa7, 0xea, 0xba, 0xa4, 0x51,
	0x47, 0xee, 0x8d, 0xf4, 0x63, 0xf4, 0x17, 0xa9, 0xba, 0xd8, 0xed, 0xaa, 0x23, 0xc5, 0x30, 0xf7,
	0x44, 0x45, 0xea, 0xa1, 0xbf, 0xc4, 0xeb, 0x1c, 0xe7, 0xe1, 0xff, 0x78, 0x28, 0x6b, 0x52, 0x0f,
	0xfd, 0x95, 0x80, 0xef, 0xf0, 0x71, 0x06, 0xea, 0x9e, 0xdc, 0x97, 0x78, 0x5c, 0xff, 0x5a, 0xc0,
	0x1b, 0x7c, 0x71, 0x8a, 0x24, 0x51, 0x53, 0xb8, 0x17, 0xd0, 0x27, 0x02, 0xbe, 0x0f, 0xed, 0x0c,
	0x81, 0xa9, 0xad, 0x24, 0x56, 0xfb, 0xa2, 0x6e, 0xa0, 0xbf, 0x59, 0x88, 0x09, 0x8b, 0x29, 0x33,
	0xd5, 0x23, 0x49, 0x33, 0xfb, 0xf2, 0x40, 0x36, 0xd0, 0xdf, 0x0a, 0xf8, 0x0d, 0x1e, 0xe7, 0x51,
	0x2a, 0x1f, 0xc8, 0x3a, 0x73, 0xe9, 0xdf, 0x09, 0xa9, 0x9d, 0xdd, 0x91, 0xcc, 0x46, 0xed, 0xab,
	0xca, 0x01, 0xfa, 0x7b, 0x01, 0x3f, 0x82, 0x4d, 0x26, 0xd0, 0x24, 0xd1, 0x90, 0xcc, 0x23, 0x59,
	0x37, 0x54, 0x2d, 0x5d, 0x26, 0x33, 0xfb, 0x1f, 0x16, 0x66, 0x33, 0xdb, 0x64, 0x9d, 0xe5, 0x96,
	0x8e, 0xfe, 0x71, 0x31, 0x31, 0x13, 0x31, 0xbf, 0xf3, 0x8e, 0xff, 0xb4, 0xe8, 0x48, 0x33, 0x2c,
	0x09, 0x84, 0xaa, 0xa1, 0x7f, 0x16, 0xf0, 0x3d, 0x4e, 0xe7, 0x85, 0x88, 0xac, 0xa8, 0x37, 0x92,
	0xd0, 0xbf, 0x2c, 0x84, 0xdc, 0x2e, 0x96, 0x32, 0x24, 0xeb, 0xd0, 0xbf, 0x2e, 0x56, 0x93, 0x37,
	0xf3, 0xdf, 0x04, 0xfc, 0x26, 0x6c, 0x64, 0xa9, 0xa5, 0x49, 0x5d, 0x49, 0x1e, 0x26, 0xf2, 0x7f,
	0x5f, 0x44, 0x45, 0x53, 0xfb, 0x92, 0xa9, 0xee, 0xef, 0xf7, 0x65, 0x45, 0x42, 0x9f, 0x92, 0x6d,
	0x66, 0x85, 0xd3, 0x90, 0xcd, 0x84, 0xfe, 0x43, 0xc0, 0x77, 0x39, 0xd9, 0xd8, 0xd4, 0xba, 0x21,
	0x1a, 0x23, 0x9d, 0x8c, 0x84, 0xfe, 0x73, 0xb1, 0x2a, 0x26, 0x3b, 0x50, 0xd5, 0x1e, 0x13, 0xfd,
	0xd7, 0xc2, 0xa1, 0x84, 0x6f, 0x1a, 0xf1, 0x89, 0x62, 0x12, 0x86, 0xf5, 0xd5, 0x03, 0x59, 0x31,
	0x07, 0x92, 0x71, 0xa8, 0xf6, 0xd0, 0x7f, 0x0b, 0xf8, 0x37, 0xe0, 0x61, 0xaa, 0x96, 0xb8, 0xd3,
	0xd4, 0xc9, 0x2e, 0x37, 0xec, 0x8b, 0x06, 0xf1, 0x22, 0x0d, 0x22, 0xfa, 0x1f, 0x01, 0xaf, 0x65,
	0xb2, 0x48, 0x91, 0x8c, 0x27, 0xaa, 0xf6, 0x18, 0xfd, 0xaf, 0x80, 0xdf, 0x81, 0x07, 0x29, 0x4c,
	0x66, 0xd0, 0x15, 0xdd, 0xdc, 0x93, 0x95, 0x9e, 0xc9, 0x08, 0x4d, 0x3d, 0x83, 0xfe, 0x2f, 0xaf,
	0x97, 0x38, 0xec, 0x50, 0x64, 0xba, 0x52, 0x8f, 0x85, 0x0d, 0xfd, 0xbf, 0x80, 0xb7, 0xe0, 0xed,
	0x45, 0xb2, 0xaa, 0x8a, 0x21, 0x71, 0x3d, 0x5d, 0x52, 0x74, 0x99, 0xe6, 0x1b, 0xdd, 0x19, 0x3e,
	0x5b, 0xb8, 0x9f, 0x6e, 0xca, 0x72, 0x8f, 0xbb, 0xf7, 0x3b, 0x0b, 0x8a, 0x6a, 0x52, 0xf7, 0x50,
	0xd4, 0x0e, 0x24, 0x53, 0x36, 0xa4, 0x01, 0x17, 0x7f, 0x57, 0xc0, 0x6d, 0x9e, 0xa3, 0xd4, 0xfb,
	0x8b, 0x0d, 0xfa, 0x73, 0x61, 0x7b, 0x07, 0x4a, 0xa4, 0x34, 0xc6, 0x15, 0x28, 0x74, 0x15, 0x74,
	0x83, 0xfc, 0x1a, 0x4f, 0x90, 0x40, 0x7e, 0x25, 0x05, 0x15, 0xc8, 0xef, 0xef, 0x0f, 0x51, 0x91,
	0xfc, 0x3e, 0xd6, 0x50, 0x69, 0xfb, 0x11, 0xd4, 0xf9, 0x3d, 0x40, 0xb6, 0x71, 0x03, 0xaa, 0x43,
	0x4d, 0x3e, 0x12, 0xbb, 0xc7, 0xe8, 0x06, 0x69, 0xf0, 0xd4, 0x45, 0xc2, 0xf6, 0x1f, 0x42, 0x33,
	0x7b, 0xc1, 0xc5, 0x35, 0x28, 0x69, 0x64, 0x67, 0xba, 0x81, 0x9b, 0x50, 0x23, 0x6a, 0x92, 0xa6,
	0x3e, 0x46, 0x02, 0x5e, 0x85, 0x86, 0x26, 0x75, 0xd5, 0xc1, 0x40, 0x22, 0x2e, 0x41, 0x05, 0x5c,
	0x85, 0xe2, 0xa1, 0x6a, 0xa0, 0x22, 0xe9, 0xb1, 0x3f, 0xea, 0xf7, 0x51, 0x09, 0xdf, 0x84, 0x92,
	0x38, 0x32, 0x54, 0xf4, 0xcb, 0xe4, 0x4f, 0xd8, 0x3e, 0x87, 0x46, 0xe6, 0xf9, 0x96, 0x4c, 0xbd,
	0x38, 0xcb, 0x9a, 0x50, 0x13, 0x87, 0x43, 0x92, 0x4c, 0x12, 0x12, 0x70, 0x0b, 0xe0, 0x40, 0x55,
	0x0f, 0xfa, 0xd2, 0xb0, 0x2f, 0x1e, 0xa3, 0x02, 0x91, 0xaa, 0x8a, 0xc4, 0xa4, 0x45, 0x0c, 0x50,
	0x19, 0x1c, 0x77, 0x45, 0xad, 0x87, 0xca, 0x64, 0x90, 0xae, 0xda, 0x13, 0x87, 0xe2, 0x31, 0xaa,
	0x10, 0x35, 0xd2, 0xd0, 0x0f, 0xd5, 0x21, 0xaa, 0x12, 0xb5, 0xa1, 0x78, 0x3c, 0x14, 0xfb, 0xa8,
	0xb6, 0xfd, 0xdb, 0x50, 0x4f, 0xff, 0x29, 0x80, 0xeb, 0x50, 0x3e, 0x18, 0xb1, 0x75, 0xd5, 0xa1,
	0xcc, 0x02, 0x2a, 0x90, 0x35, 0xe8, 0x8a, 0x8e, 0x0a, 0x04, 0xfb, 0x68, 0x24, 0x77, 0x1f, 0xa3,
	0xe2, 0xf6, 0x63, 0x58, 0xc9, 0x9d, 0xe5, 0x6c, 0xe5, 0x07, 0xe9, 0x89, 0x4b, 0xce, 0xe0, 0x15,
	0x46, 0xd5, 0x04, 0x22, 0x49, 0x83, 0xe9, 0x6e, 0xd5, 0x55, 0x95, 0x7d, 0x59, 0x1b, 0x70, 0xc6,
	0x14, 0xf6, 0x8a, 0x3f, 0x28, 0xdc, 0x78, 0x5a, 0xa1, 0x25, 0xc2, 0x6f, 0xfe, 0x2a, 0x00, 0x00,
	0xff, 0xff, 0x2c, 0x85, 0x2e, 0x7f, 0x52, 0x22, 0x00, 0x00,
}
